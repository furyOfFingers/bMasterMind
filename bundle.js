!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=36)}([function(e,t,n){"use strict";e.exports=n(18)},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(l=r,a=btoa(unescape(encodeURIComponent(JSON.stringify(l)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),"/*# ".concat(u," */")),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}var l,a,u;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(o[l]=!0)}for(var a=0;a<e.length;a++){var u=[].concat(e[a]);r&&o[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),l=[];function a(e){for(var t=-1,n=0;n<l.length;n++)if(l[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],u=t.base?i[0]+t.base:i[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=a(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(l[f].references++,l[f].updater(d)):l.push({identifier:s,updater:y(d,t),references:1}),r.push(s)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var l=i(e.insert||"head");if(!l)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");l.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function d(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var i=document.createTextNode(o),l=e.childNodes;l[t]&&e.removeChild(l[t]),l.length?e.insertBefore(i,l[t]):e.appendChild(i)}}function p(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function y(e,t){var n,r,o;if(t.singleton){var i=h++;n=m||(m=c(t)),r=d.bind(null,n,i,!1),o=d.bind(null,n,i,!0)}else n=c(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=a(n[r]);l[o].references--}for(var i=u(e,t),c=0;c<n.length;c++){var s=a(n[c]);0===l[s].references&&(l[s].updater(),l.splice(s,1))}n=i}}}},function(e,t,n){var r=n(2),o=n(31);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var i=typeof r;if("string"===i||"number"===i)e.push(r);else if(Array.isArray(r)&&r.length){var l=o.apply(null,r);l&&e.push(l)}else if("object"===i)for(var a in r)n.call(r,a)&&r[a]&&e.push(a)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){var r=n(2),o=n(29);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){var r=n(2),o=n(32);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(19)},function(e,t,n){"use strict";e.exports=n(25)},function(e,t,n){"use strict";var r=n(8),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function u(e){return r.isMemo(e)?l:a[e.$$typeof]||o}a[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},a[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&e(t,o,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var a=u(t),h=u(n),y=0;y<l.length;++y){var b=l[y];if(!(i[b]||r&&r[b]||h&&h[b]||a&&a[b])){var g=d(n,b);try{c(t,b,g)}catch(e){}}}}return t}},function(e,t,n){"use strict";(function(e,r){var o,i=n(15);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var l=Object(i.a)(o);t.a=l}).call(this,n(26),n(27)(e))},function(e,t,n){var r=n(2),o=n(30);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){var r=n(2),o=n(33);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){var r=n(2),o=n(34);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function l(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=l(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){a=r(n);for(var f=0;f<a.length;f++)i.call(n,a[f])&&(u[a[f]]=n[a[f]])}}return u}},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",(function(){return r}))},function(e,t,n){var r=n(2),o=n(28);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){var r=n(2),o=n(35);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(14),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function w(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||g}function E(){}function x(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(b(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},E.prototype=w.prototype;var k=x.prototype=new E;k.constructor=x,r(k,w.prototype),k.isPureReactComponent=!0;var A={current:null},S=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)S.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:A.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var P=/\/+/g,_=[];function j(e,t,n,r){if(_.length){var o=_.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>_.length&&_.push(e)}function D(e,t,n){return null==e?0:function e(t,n,r,o){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var u=!1;if(null===t)u=!0;else switch(a){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case l:u=!0}}if(u)return r(o,t,""===n?"."+I(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+I(a=t[c],c);u+=e(a,s,r,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(a=t.next()).done;)u+=e(a=a.value,s=n+I(a,c++),r,o);else if("object"===a)throw r=""+t,Error(b(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function z(e,t){e.func.call(e.context,t,e.count++)}function R(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?M(e,r,n,(function(e){return e})):null!=e&&(O(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function M(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(P,"$&/")+"/"),D(e,R,t=j(t,i,r,o)),N(t)}var F={current:null};function L(){var e=F.current;if(null===e)throw Error(b(321));return e}var B={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:A,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return M(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;D(e,z,t=j(null,null,t,n)),N(t)},count:function(e){return D(e,(function(){return null}),null)},toArray:function(e){var t=[];return M(e,t,null,(function(e){return e})),t},only:function(e){if(!O(e))throw Error(b(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,t.cloneElement=function(e,t,n){if(null==e)throw Error(b(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=A.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)S.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=O,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(14),i=n(20);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,h=null,y=null;function b(e,t,n){var r=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var g=null,v={};function w(){if(g)for(var e in v){var t=v[e],n=g.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!x[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(k.hasOwnProperty(u))throw Error(l(99,u));k[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&E(c[o],a,u);o=!0}else i.registrationName?(E(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function E(e,t,n){if(A[e])throw Error(l(100,e));A[e]=t,S[e]=t.eventTypes[n].dependencies}var x=[],k={},A={},S={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!v.hasOwnProperty(t)||v[t]!==r){if(v[t])throw Error(l(102,t));v[t]=r,n=!0}}n&&w()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),O=null,P=null,_=null;function j(e){if(e=h(e)){if("function"!=typeof O)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),O(e.stateNode,e.type,t))}}function N(e){P?_?_.push(e):_=[e]:P=e}function D(){if(P){var e=P,t=_;if(_=P=null,j(e),t)for(e=0;e<t.length;e++)j(t[e])}}function I(e,t){return e(t)}function z(e,t,n,r,o){return e(t,n,r,o)}function R(){}var M=I,F=!1,L=!1;function B(){null===P&&null===_||(R(),D())}function U(e,t,n){if(L)return e(t,n);L=!0;try{return M(e,t,n)}finally{L=!1,B()}}var W=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,$=Object.prototype.hasOwnProperty,V={},Q={};function H(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){K[e]=new H(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];K[t]=new H(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){K[e]=new H(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){K[e]=new H(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){K[e]=new H(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){K[e]=new H(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){K[e]=new H(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){K[e]=new H(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){K[e]=new H(e,5,!1,e.toLowerCase(),null,!1)}));var Y=/[\-:]([a-z])/g;function q(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(Y,q);K[t]=new H(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(Y,q);K[t]=new H(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(Y,q);K[t]=new H(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){K[e]=new H(e,1,!1,e.toLowerCase(),null,!1)})),K.xlinkHref=new H("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){K[e]=new H(e,1,!1,e.toLowerCase(),null,!0)}));var G=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=K.hasOwnProperty(t)?K[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!$.call(Q,e)||!$.call(V,e)&&(W.test(e)?Q[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}G.hasOwnProperty("ReactCurrentDispatcher")||(G.ReactCurrentDispatcher={current:null}),G.hasOwnProperty("ReactCurrentBatchConfig")||(G.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ye(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ye(e.type);case pe:return ye(e.render);case de:if(e=1===e._status?e._result:null)return ye(e)}return null}function be(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ye(e.type);n=null,r&&(n=ye(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ge(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ve(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=ve(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ee(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ve(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ke(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ge(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ae(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Se(e,t){Ae(e,t);var n=ge(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,n):t.hasOwnProperty("defaultValue")&&Te(e,t.type,ge(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Te(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Oe(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Pe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ge(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function _e(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function je(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ge(n)}}function Ne(e,t){var n=ge(t.value),r=ge(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function De(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ie="http://www.w3.org/1999/xhtml",ze="http://www.w3.org/2000/svg";function Re(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Me(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Re(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,Le=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==ze||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Be(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ue(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:Ue("Animation","AnimationEnd"),animationiteration:Ue("Animation","AnimationIteration"),animationstart:Ue("Animation","AnimationStart"),transitionend:Ue("Transition","TransitionEnd")},$e={},Ve={};function Qe(e){if($e[e])return $e[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return $e[e]=n[t];return e}T&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var He=Qe("animationend"),Ke=Qe("animationiteration"),Ye=Qe("animationstart"),qe=Qe("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Ze(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(l(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function lt(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)b(e,t[r],n[r]);else t&&b(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function at(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,lt),it)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!T)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var st=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function dt(e,t,n,r){if(st.length){var o=st.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Tn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=ut(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=rt(a,c))}at(a)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":Yt(t,"scroll",!0);break;case"focus":case"blur":Yt(t,"focus",!0),Yt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&Yt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&Kt(e,t)}n.set(e,null)}}var ht,yt,bt,gt=!1,vt=[],wt=null,Et=null,xt=null,kt=new Map,At=new Map,St=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Ot(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Pt(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":Et=null;break;case"mouseover":case"mouseout":xt=null;break;case"pointerover":case"pointerout":kt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":At.delete(t.pointerId)}}function _t(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=Ot(t,n,r,o,i),null!==t&&(null!==(t=On(t))&&yt(t)),e):(e.eventSystemFlags|=r,e)}function jt(e){var t=Tn(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){bt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=On(t);return null!==n&&yt(n),e.blockedOn=t,!1}return!0}function Dt(e,t,n){Nt(e)&&n.delete(t)}function It(){for(gt=!1;0<vt.length;){var e=vt[0];if(null!==e.blockedOn){null!==(e=On(e.blockedOn))&&ht(e);break}var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:vt.shift()}null!==wt&&Nt(wt)&&(wt=null),null!==Et&&Nt(Et)&&(Et=null),null!==xt&&Nt(xt)&&(xt=null),kt.forEach(Dt),At.forEach(Dt)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,It)))}function Rt(e){function t(t){return zt(t,e)}if(0<vt.length){zt(vt[0],e);for(var n=1;n<vt.length;n++){var r=vt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&zt(wt,e),null!==Et&&zt(Et,e),null!==xt&&zt(xt,e),kt.forEach(t),At.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)jt(n),null===n.blockedOn&&St.shift()}var Mt={},Ft=new Map,Lt=new Map,Bt=["abort","abort",He,"animationEnd",Ke,"animationIteration",Ye,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",qe,"transitionEnd","waiting","waiting"];function Ut(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Lt.set(r,t),Ft.set(r,i),Mt[o]=i}}Ut("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ut("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ut(Bt,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),$t=0;$t<Wt.length;$t++)Lt.set(Wt[$t],0);var Vt=i.unstable_UserBlockingPriority,Qt=i.unstable_runWithPriority,Ht=!0;function Kt(e,t){Yt(t,e,!1)}function Yt(e,t,n){var r=Lt.get(t);switch(void 0===r?2:r){case 0:r=qt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Xt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function qt(e,t,n,r){F||R();var o=Xt,i=F;F=!0;try{z(o,e,t,n,r)}finally{(F=i)||B()}}function Gt(e,t,n,r){Qt(Vt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){if(Ht)if(0<vt.length&&-1<Ct.indexOf(e))e=Ot(null,e,t,n,r),vt.push(e);else{var o=Zt(e,t,n,r);if(null===o)Pt(e,r);else if(-1<Ct.indexOf(e))e=Ot(o,e,t,n,r),vt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return wt=_t(wt,e,t,n,r,o),!0;case"dragenter":return Et=_t(Et,e,t,n,r,o),!0;case"mouseover":return xt=_t(xt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return kt.set(i,_t(kt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,At.set(i,_t(At.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Pt(e,r),e=dt(e,r,null,t);try{U(pt,e)}finally{ft(e)}}}}function Zt(e,t,n,r){if(null!==(n=Tn(n=ut(r)))){var o=Je(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=dt(e,r,n,t);try{U(pt,e)}finally{ft(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function ln(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var an=Ie;function un(e,t){var n=Ze(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function cn(){}function sn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=sn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=sn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn=null,yn=null;function bn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var vn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function En(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function xn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var kn=Math.random().toString(36).slice(2),An="__reactInternalInstance$"+kn,Sn="__reactEventHandlers$"+kn,Cn="__reactContainere$"+kn;function Tn(e){var t=e[An];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Cn]||n[An]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=xn(e);null!==e;){if(n=e[An])return n;e=xn(e)}return t}n=(e=n).parentNode}return null}function On(e){return!(e=e[An]||e[Cn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Pn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function _n(e){return e[Sn]||null}function jn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Dn(e,t,n){(t=Nn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=jn(t);for(t=n.length;0<t--;)Dn(n[t],"captured",e);for(t=0;t<n.length;t++)Dn(n[t],"bubbled",e)}}function zn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Nn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Rn(e){e&&e.dispatchConfig.registrationName&&zn(e._targetInst,null,e)}function Mn(e){ot(e,In)}var Fn=null,Ln=null,Bn=null;function Un(){if(Bn)return Bn;var e,t,n=Ln,r=n.length,o="value"in Fn?Fn.value:Fn.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Bn=o.slice(e,1<t?1-t:void 0)}function Wn(){return!0}function $n(){return!1}function Vn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Wn:$n,this.isPropagationStopped=$n,this}function Qn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Hn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Kn(e){e.eventPool=[],e.getPooled=Qn,e.release=Hn}o(Vn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Wn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Wn)},persist:function(){this.isPersistent=Wn},isPersistent:$n,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=$n,this._dispatchInstances=this._dispatchListeners=null}}),Vn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Vn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Kn(n),n},Kn(Vn);var Yn=Vn.extend({data:null}),qn=Vn.extend({data:null}),Gn=[9,13,27,32],Xn=T&&"CompositionEvent"in window,Zn=null;T&&"documentMode"in document&&(Zn=document.documentMode);var Jn=T&&"TextEvent"in window&&!Zn,er=T&&(!Xn||Zn&&8<Zn&&11>=Zn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Gn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var lr=!1;var ar={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Xn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else lr?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(lr||i!==nr.compositionStart?i===nr.compositionEnd&&lr&&(o=Un()):(Ln="value"in(Fn=r)?Fn.value:Fn.textContent,lr=!0)),i=Yn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),Mn(i),o=i):o=null,(e=Jn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(lr)return"compositionend"===e||!Xn&&or(e,t)?(e=Un(),Bn=Ln=Fn=null,lr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=qn.getPooled(nr.beforeInput,t,n,r)).data=e,Mn(t)):t=null,null===o?t:null===t?o:[o,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Vn.getPooled(sr.change,e,t,n)).type="change",N(n),Mn(e),e}var dr=null,pr=null;function mr(e){at(e)}function hr(e){if(Ee(Pn(e)))return e}function yr(e,t){if("change"===e)return t}var br=!1;function gr(){dr&&(dr.detachEvent("onpropertychange",vr),pr=dr=null)}function vr(e){if("value"===e.propertyName&&hr(pr))if(e=fr(pr,e,ut(e)),F)at(e);else{F=!0;try{I(mr,e)}finally{F=!1,B()}}}function wr(e,t,n){"focus"===e?(gr(),pr=n,(dr=t).attachEvent("onpropertychange",vr)):"blur"===e&&gr()}function Er(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return hr(pr)}function xr(e,t){if("click"===e)return hr(t)}function kr(e,t){if("input"===e||"change"===e)return hr(t)}T&&(br=ct("input")&&(!document.documentMode||9<document.documentMode));var Ar={eventTypes:sr,_isInputEventSupported:br,extractEvents:function(e,t,n,r){var o=t?Pn(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=yr;else if(cr(o))if(br)l=kr;else{l=Er;var a=wr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=xr);if(l&&(l=l(e,t)))return fr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Te(o,"number",o.value)}},Sr=Vn.extend({view:null,detail:null}),Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function Or(){return Tr}var Pr=0,_r=0,jr=!1,Nr=!1,Dr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Or,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Pr;return Pr=e.screenX,jr?"mousemove"===e.type?e.screenX-t:0:(jr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=_r;return _r=e.screenY,Nr?"mousemove"===e.type?e.screenY-t:0:(Nr=!0,0)}}),Ir=Dr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),zr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Rr={eventTypes:zr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l)?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?Tn(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null;if(l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Dr,u=zr.mouseLeave,c=zr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Ir,u=zr.pointerLeave,c=zr.pointerEnter,s="pointer");if(e=null==l?i:Pn(l),i=null==t?i:Pn(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=jn(e))l++;for(e=0,t=c;t;t=jn(t))e++;for(;0<l-e;)a=jn(a),l--;for(;0<e-l;)c=jn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=jn(a),c=jn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=jn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=jn(s);for(s=0;s<a.length;s++)zn(a[s],"bubbled",u);for(s=r.length;0<s--;)zn(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}};var Mr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function Lr(e,t){if(Mr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Mr(e[n[r]],t[n[r]]))return!1;return!0}var Br=T&&"documentMode"in document&&11>=document.documentMode,Ur={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wr=null,$r=null,Vr=null,Qr=!1;function Hr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Qr||null==Wr||Wr!==sn(n)?null:("selectionStart"in(n=Wr)&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vr&&Lr(Vr,n)?null:(Vr=n,(e=Vn.getPooled(Ur.select,$r,e,t)).type="select",e.target=Wr,Mn(e),e))}var Kr={eventTypes:Ur,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Ze(o),i=S.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?Pn(t):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Wr=o,$r=t,Vr=null);break;case"blur":Vr=$r=Wr=null;break;case"mousedown":Qr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Qr=!1,Hr(n,r);case"selectionchange":if(Br)break;case"keydown":case"keyup":return Hr(n,r)}return null}},Yr=Vn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),qr=Vn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Gr=Sr.extend({relatedTarget:null});function Xr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Zr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Sr.extend({key:function(e){if(e.key){var t=Zr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Jr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Or,charCode:function(e){return"keypress"===e.type?Xr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=Dr.extend({dataTransfer:null}),no=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Or}),ro=Vn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=Dr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:Mt,extractEvents:function(e,t,n,r){var o=Ft.get(e);if(!o)return null;switch(e){case"keypress":if(0===Xr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Gr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Dr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case He:case Ke:case Ye:e=Yr;break;case qe:e=ro;break;case"scroll":e=Sr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=qr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=Vn}return Mn(t=e.getPooled(o,t,n,r)),t}};if(g)throw Error(l(101));g=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=_n,h=On,y=Pn,C({SimpleEventPlugin:io,EnterLeaveEventPlugin:Rr,ChangeEventPlugin:Ar,SelectEventPlugin:Kr,BeforeInputEventPlugin:ar});var lo=[],ao=-1;function uo(e){0>ao||(e.current=lo[ao],lo[ao]=null,ao--)}function co(e,t){ao++,lo[ao]=e.current,e.current=t}var so={},fo={current:so},po={current:!1},mo=so;function ho(e,t){var n=e.type.contextTypes;if(!n)return so;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function yo(e){return null!=(e=e.childContextTypes)}function bo(){uo(po),uo(fo)}function go(e,t,n){if(fo.current!==so)throw Error(l(168));co(fo,t),co(po,n)}function vo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,ye(t)||"Unknown",i));return o({},n,{},r)}function wo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||so,mo=fo.current,co(fo,e),co(po,po.current),!0}function Eo(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=vo(e,t,mo),r.__reactInternalMemoizedMergedChildContext=e,uo(po),uo(fo),co(fo,e)):uo(po),co(po,n)}var xo=i.unstable_runWithPriority,ko=i.unstable_scheduleCallback,Ao=i.unstable_cancelCallback,So=i.unstable_requestPaint,Co=i.unstable_now,To=i.unstable_getCurrentPriorityLevel,Oo=i.unstable_ImmediatePriority,Po=i.unstable_UserBlockingPriority,_o=i.unstable_NormalPriority,jo=i.unstable_LowPriority,No=i.unstable_IdlePriority,Do={},Io=i.unstable_shouldYield,zo=void 0!==So?So:function(){},Ro=null,Mo=null,Fo=!1,Lo=Co(),Bo=1e4>Lo?Co:function(){return Co()-Lo};function Uo(){switch(To()){case Oo:return 99;case Po:return 98;case _o:return 97;case jo:return 96;case No:return 95;default:throw Error(l(332))}}function Wo(e){switch(e){case 99:return Oo;case 98:return Po;case 97:return _o;case 96:return jo;case 95:return No;default:throw Error(l(332))}}function $o(e,t){return e=Wo(e),xo(e,t)}function Vo(e,t,n){return e=Wo(e),ko(e,t,n)}function Qo(e){return null===Ro?(Ro=[e],Mo=ko(Oo,Ko)):Ro.push(e),Do}function Ho(){if(null!==Mo){var e=Mo;Mo=null,Ao(e)}Ko()}function Ko(){if(!Fo&&null!==Ro){Fo=!0;var e=0;try{var t=Ro;$o(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ro=null}catch(t){throw null!==Ro&&(Ro=Ro.slice(e+1)),ko(Oo,Ho),t}finally{Fo=!1}}}function Yo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function qo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Go={current:null},Xo=null,Zo=null,Jo=null;function ei(){Jo=Zo=Xo=null}function ti(e){var t=Go.current;uo(Go),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Xo=e,Jo=Zo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(_l=!0),e.firstContext=null)}function oi(e,t){if(Jo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Jo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Zo){if(null===Xo)throw Error(l(308));Zo=t,Xo.dependencies={expirationTime:0,firstContext:t,responders:null}}else Zo=Zo.next=t;return e._currentValue}var ii=!1;function li(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ai(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.alternate;null!==n&&ai(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function fi(e,t,n,r){var i=e.updateQueue;ii=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=a))}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),iu(a,m.suspenseConfig);e:{var y=e,b=m;switch(a=t,h=n,b.tag){case 1:if("function"==typeof(y=b.payload)){c=y.call(h,c,a);break e}c=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null==(a="function"==typeof(y=b.payload)?y.call(h,c,a):y))break e;c=o({},c,a);break e;case 2:ii=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,lu(s),e.expirationTime=s,e.memoizedState=c}}function di(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var pi=G.ReactCurrentBatchConfig,mi=(new r.Component).refs;function hi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var yi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ha(),o=pi.suspense;(o=ui(r=Ka(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ci(e,o),Ya(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ha(),o=pi.suspense;(o=ui(r=Ka(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ci(e,o),Ya(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ha(),r=pi.suspense;(r=ui(n=Ka(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ci(e,r),Ya(e,n)}};function bi(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!t.prototype||!t.prototype.isPureReactComponent||(!Lr(n,r)||!Lr(o,i))}function gi(e,t,n){var r=!1,o=so,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=yo(t)?mo:fo.current,i=(r=null!=(r=t.contextTypes))?ho(e,o):so),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=yi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function vi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&yi.enqueueReplaceState(t,t.state,null)}function wi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=mi,li(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=yo(t)?mo:fo.current,o.context=ho(e,i)),fi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(hi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&yi.enqueueReplaceState(o,o.state,null),fi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ei=Array.isArray;function xi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===mi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function ki(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ai(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Cu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Pu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=xi(e,t,n),r.return=e,r):((r=Tu(n.type,n.key,n.props,null,e.mode,r)).ref=xi(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=_u(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Ou(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Pu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Tu(t.type,t.key,t.props,null,e.mode,n)).ref=xi(e,null,t),n.return=e,n;case te:return(t=_u(t,e.mode,n)).return=e,t}if(Ei(t)||he(t))return(t=Ou(t,e.mode,n,null)).return=e,t;ki(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(Ei(n)||he(n))return null!==o?null:f(e,t,n,r,null);ki(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ei(r)||he(r))return f(t,e=e.get(n)||null,r,o,null);ki(t,r)}return null}function h(o,l,a,u){for(var c=null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var b=p(o,f,a[h],u);if(null===b){null===f&&(f=y);break}e&&f&&null===b.alternate&&t(o,f),l=i(b,l,h),null===s?c=b:s.sibling=b,s=b,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)null!==(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<a.length;h++)null!==(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,a,u,c){var s=he(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=a,y=a=0,b=null,g=u.next();null!==h&&!g.done;y++,g=u.next()){h.index>y?(b=h,h=null):b=h.sibling;var v=p(o,h,g.value,c);if(null===v){null===h&&(h=b);break}e&&h&&null===v.alternate&&t(o,h),a=i(v,a,y),null===f?s=v:f.sibling=v,f=v,h=b}if(g.done)return n(o,h),s;if(null===h){for(;!g.done;y++,g=u.next())null!==(g=d(o,g.value,c))&&(a=i(g,a,y),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(o,h);!g.done;y++,g=u.next())null!==(g=m(h,o,y,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?y:g.key),a=i(g,a,y),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=xi(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=Ou(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Tu(i.type,i.key,i.props,null,e.mode,u)).ref=xi(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=_u(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Pu(i,e.mode,u)).return=e,e=r),a(e);if(Ei(i))return h(e,r,i,u);if(he(i))return y(e,r,i,u);if(s&&ki(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Si=Ai(!0),Ci=Ai(!1),Ti={},Oi={current:Ti},Pi={current:Ti},_i={current:Ti};function ji(e){if(e===Ti)throw Error(l(174));return e}function Ni(e,t){switch(co(_i,t),co(Pi,e),co(Oi,Ti),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Me(null,"");break;default:t=Me(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}uo(Oi),co(Oi,t)}function Di(){uo(Oi),uo(Pi),uo(_i)}function Ii(e){ji(_i.current);var t=ji(Oi.current),n=Me(t,e.type);t!==n&&(co(Pi,e),co(Oi,n))}function zi(e){Pi.current===e&&(uo(Oi),uo(Pi))}var Ri={current:0};function Mi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Fi(e,t){return{responder:e,props:t}}var Li=G.ReactCurrentDispatcher,Bi=G.ReactCurrentBatchConfig,Ui=0,Wi=null,$i=null,Vi=null,Qi=!1;function Hi(){throw Error(l(321))}function Ki(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Mr(e[n],t[n]))return!1;return!0}function Yi(e,t,n,r,o,i){if(Ui=i,Wi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Li.current=null===e||null===e.memoizedState?bl:gl,e=n(r,o),t.expirationTime===Ui){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Vi=$i=null,t.updateQueue=null,Li.current=vl,e=n(r,o)}while(t.expirationTime===Ui)}if(Li.current=yl,t=null!==$i&&null!==$i.next,Ui=0,Vi=$i=Wi=null,Qi=!1,t)throw Error(l(300));return e}function qi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Vi?Wi.memoizedState=Vi=e:Vi=Vi.next=e,Vi}function Gi(){if(null===$i){var e=Wi.alternate;e=null!==e?e.memoizedState:null}else e=$i.next;var t=null===Vi?Wi.memoizedState:Vi.next;if(null!==t)Vi=t,$i=e;else{if(null===e)throw Error(l(310));e={memoizedState:($i=e).memoizedState,baseState:$i.baseState,baseQueue:$i.baseQueue,queue:$i.queue,next:null},null===Vi?Wi.memoizedState=Vi=e:Vi=Vi.next=e}return Vi}function Xi(e,t){return"function"==typeof t?t(e):t}function Zi(e){var t=Gi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=$i,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<Ui){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>Wi.expirationTime&&(Wi.expirationTime=s,lu(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),iu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Mr(r,t.memoizedState)||(_l=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Ji(e){var t=Gi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Mr(i,t.memoizedState)||(_l=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function el(e){var t=qi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xi,lastRenderedState:e}).dispatch=hl.bind(null,Wi,e),[t.memoizedState,e]}function tl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Wi.updateQueue)?(t={lastEffect:null},Wi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function nl(){return Gi().memoizedState}function rl(e,t,n,r){var o=qi();Wi.effectTag|=e,o.memoizedState=tl(1|t,n,void 0,void 0===r?null:r)}function ol(e,t,n,r){var o=Gi();r=void 0===r?null:r;var i=void 0;if(null!==$i){var l=$i.memoizedState;if(i=l.destroy,null!==r&&Ki(r,l.deps))return void tl(t,n,i,r)}Wi.effectTag|=e,o.memoizedState=tl(1|t,n,i,r)}function il(e,t){return rl(516,4,e,t)}function ll(e,t){return ol(516,4,e,t)}function al(e,t){return ol(4,2,e,t)}function ul(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function cl(e,t,n){return n=null!=n?n.concat([e]):null,ol(4,2,ul.bind(null,t,e),n)}function sl(){}function fl(e,t){return qi().memoizedState=[e,void 0===t?null:t],e}function dl(e,t){var n=Gi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pl(e,t){var n=Gi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ml(e,t,n){var r=Uo();$o(98>r?98:r,(function(){e(!0)})),$o(97<r?97:r,(function(){var r=Bi.suspense;Bi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Bi.suspense=r}}))}function hl(e,t,n){var r=Ha(),o=pi.suspense;o={expirationTime:r=Ka(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Wi||null!==i&&i===Wi)Qi=!0,o.expirationTime=Ui,Wi.expirationTime=Ui;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Mr(a,l))return}catch(e){}Ya(e,r)}}var yl={readContext:oi,useCallback:Hi,useContext:Hi,useEffect:Hi,useImperativeHandle:Hi,useLayoutEffect:Hi,useMemo:Hi,useReducer:Hi,useRef:Hi,useState:Hi,useDebugValue:Hi,useResponder:Hi,useDeferredValue:Hi,useTransition:Hi},bl={readContext:oi,useCallback:fl,useContext:oi,useEffect:il,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,rl(4,2,ul.bind(null,t,e),n)},useLayoutEffect:function(e,t){return rl(4,2,e,t)},useMemo:function(e,t){var n=qi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=qi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=hl.bind(null,Wi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},qi().memoizedState=e},useState:el,useDebugValue:sl,useResponder:Fi,useDeferredValue:function(e,t){var n=el(e),r=n[0],o=n[1];return il((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=el(!1),n=t[0];return t=t[1],[fl(ml.bind(null,t,e),[t,e]),n]}},gl={readContext:oi,useCallback:dl,useContext:oi,useEffect:ll,useImperativeHandle:cl,useLayoutEffect:al,useMemo:pl,useReducer:Zi,useRef:nl,useState:function(){return Zi(Xi)},useDebugValue:sl,useResponder:Fi,useDeferredValue:function(e,t){var n=Zi(Xi),r=n[0],o=n[1];return ll((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Xi),n=t[0];return t=t[1],[dl(ml.bind(null,t,e),[t,e]),n]}},vl={readContext:oi,useCallback:dl,useContext:oi,useEffect:ll,useImperativeHandle:cl,useLayoutEffect:al,useMemo:pl,useReducer:Ji,useRef:nl,useState:function(){return Ji(Xi)},useDebugValue:sl,useResponder:Fi,useDeferredValue:function(e,t){var n=Ji(Xi),r=n[0],o=n[1];return ll((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(Xi),n=t[0];return t=t[1],[dl(ml.bind(null,t,e),[t,e]),n]}},wl=null,El=null,xl=!1;function kl(e,t){var n=Au(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Al(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Sl(e){if(xl){var t=El;if(t){var n=t;if(!Al(e,t)){if(!(t=En(n.nextSibling))||!Al(e,t))return e.effectTag=-1025&e.effectTag|2,xl=!1,void(wl=e);kl(wl,n)}wl=e,El=En(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,xl=!1,wl=e}}function Cl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wl=e}function Tl(e){if(e!==wl)return!1;if(!xl)return Cl(e),xl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gn(t,e.memoizedProps))for(t=El;t;)kl(e,t),t=En(t.nextSibling);if(Cl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){El=En(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}El=null}}else El=wl?En(e.stateNode.nextSibling):null;return!0}function Ol(){El=wl=null,xl=!1}var Pl=G.ReactCurrentOwner,_l=!1;function jl(e,t,n,r){t.child=null===e?Ci(t,null,n,r):Si(t,e.child,n,r)}function Nl(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=Yi(e,t,n,r,i,o),null===e||_l?(t.effectTag|=1,jl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Yl(e,t,o))}function Dl(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Su(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Tu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Il(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Lr)(o,r)&&e.ref===t.ref)?Yl(e,t,i):(t.effectTag|=1,(e=Cu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Il(e,t,n,r,o,i){return null!==e&&Lr(e.memoizedProps,r)&&e.ref===t.ref&&(_l=!1,o<i)?(t.expirationTime=e.expirationTime,Yl(e,t,i)):Rl(e,t,n,r,i)}function zl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Rl(e,t,n,r,o){var i=yo(n)?mo:fo.current;return i=ho(t,i),ri(t,o),n=Yi(e,t,n,r,i,o),null===e||_l?(t.effectTag|=1,jl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Yl(e,t,o))}function Ml(e,t,n,r,o){if(yo(n)){var i=!0;wo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),gi(t,n,r),wi(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;"object"==typeof c&&null!==c?c=oi(c):c=ho(t,c=yo(n)?mo:fo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&vi(t,l,r,c),ii=!1;var d=t.memoizedState;l.state=d,fi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||po.current||ii?("function"==typeof s&&(hi(t,n,s,r),u=t.memoizedState),(a=ii||bi(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,ai(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:qo(t.type,a),u=l.context,"object"==typeof(c=n.contextType)&&null!==c?c=oi(c):c=ho(t,c=yo(n)?mo:fo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&vi(t,l,r,c),ii=!1,u=t.memoizedState,l.state=u,fi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||po.current||ii?("function"==typeof s&&(hi(t,n,s,r),d=t.memoizedState),(s=ii||bi(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Fl(e,t,n,r,i,o)}function Fl(e,t,n,r,o,i){zl(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&Eo(t,n,!1),Yl(e,t,i);r=t.stateNode,Pl.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Si(t,e.child,null,i),t.child=Si(t,null,a,i)):jl(e,t,a,i),t.memoizedState=r.state,o&&Eo(t,n,!0),t.child}function Ll(e){var t=e.stateNode;t.pendingContext?go(0,t.pendingContext,t.pendingContext!==t.context):t.context&&go(0,t.context,!1),Ni(e,t.containerInfo)}var Bl,Ul,Wl,$l={dehydrated:null,retryTime:0};function Vl(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Ri.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),co(Ri,1&l),null===e){if(void 0!==i.fallback&&Sl(t),a){if(a=i.fallback,(i=Ou(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ou(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=$l,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ci(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Cu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Cu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=$l,t.child=n,o}return n=Si(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=Ou(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ou(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=$l,t.child=i,n}return t.memoizedState=null,t.child=Si(t,e,i.children,n)}function Ql(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function Hl(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Kl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(jl(e,t,r.children,n),0!=(2&(r=Ri.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ql(e,n);else if(19===e.tag)Ql(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(Ri,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Mi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Hl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Mi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Hl(t,!0,n,null,i,t.lastEffect);break;case"together":Hl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Yl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&lu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Cu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Cu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ql(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Gl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return yo(t.type)&&bo(),null;case 3:return Di(),uo(po),uo(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Tl(t)||(t.effectTag|=4),null;case 5:zi(t),n=ji(_i.current);var i=t.type;if(null!==e&&null!=t.stateNode)Ul(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=ji(Oi.current),Tl(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[An]=t,r[Sn]=a,i){case"iframe":case"object":case"embed":Kt("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)Kt(Ge[e],r);break;case"source":Kt("error",r);break;case"img":case"image":case"link":Kt("error",r),Kt("load",r);break;case"form":Kt("reset",r),Kt("submit",r);break;case"details":Kt("toggle",r);break;case"input":ke(r,a),Kt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Kt("invalid",r),un(n,"onChange");break;case"textarea":je(r,a),Kt("invalid",r),un(n,"onChange")}for(var u in on(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):A.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),De(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===an&&(e=Re(i)),e===an?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[An]=t,e[Sn]=r,Bl(e,t),t.stateNode=e,u=ln(i,r),i){case"iframe":case"object":case"embed":Kt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)Kt(Ge[c],e);c=r;break;case"source":Kt("error",e),c=r;break;case"img":case"image":case"link":Kt("error",e),Kt("load",e),c=r;break;case"form":Kt("reset",e),Kt("submit",e),c=r;break;case"details":Kt("toggle",e),c=r;break;case"input":ke(e,r),c=xe(e,r),Kt("invalid",e),un(n,"onChange");break;case"option":c=Oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Kt("invalid",e),un(n,"onChange");break;case"textarea":je(e,r),c=_e(e,r),Kt("invalid",e),un(n,"onChange");break;default:c=r}on(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?nn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Le(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Be(e,f):"number"==typeof f&&Be(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(A.hasOwnProperty(a)?null!=f&&un(n,a):null!=f&&X(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),De(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ge(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Pe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Pe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}bn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Wl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=ji(_i.current),ji(Oi.current),Tl(t)?(n=t.stateNode,r=t.memoizedProps,n[An]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[An]=t,t.stateNode=n)}return null;case 13:return uo(Ri),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Tl(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ri.current)?Ta===wa&&(Ta=Ea):(Ta!==wa&&Ta!==Ea||(Ta=xa),0!==Na&&null!==Aa&&(Du(Aa,Ca),Iu(Aa,Na)))),(n||r)&&(t.effectTag|=4),null);case 4:return Di(),null;case 10:return ti(t),null;case 17:return yo(t.type)&&bo(),null;case 19:if(uo(Ri),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)ql(r,!1);else if(Ta!==wa||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Mi(a))){for(t.effectTag|=64,ql(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return co(Ri,1&Ri.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Mi(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),ql(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Bo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,ql(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Bo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Bo(),n.sibling=null,t=Ri.current,co(Ri,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function Xl(e){switch(e.tag){case 1:yo(e.type)&&bo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Di(),uo(po),uo(fo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return zi(e),null;case 13:return uo(Ri),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return uo(Ri),null;case 4:return Di(),null;case 10:return ti(e),null;default:return null}}function Zl(e,t){return{value:e,source:t,stack:be(t)}}Bl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ul=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(ji(Oi.current),e=null,n){case"input":l=xe(c,l),r=xe(c,r),e=[];break;case"option":l=Oe(c,l),r=Oe(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=_e(c,l),r=_e(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(a in on(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(A.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(A.hasOwnProperty(a)?(null!=s&&un(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Wl=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Jl="function"==typeof WeakSet?WeakSet:Set;function ea(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=be(n)),null!==n&&ye(n.type),t=t.value,null!==e&&1===e.tag&&ye(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ta(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){gu(e,t)}else t.current=null}function na(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(l(163))}function ra(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function oa(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ia(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void oa(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:qo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&di(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}di(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&bn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Rt(n)))));case 19:case 17:case 20:case 21:return}throw Error(l(163))}function la(e,t,n){switch("function"==typeof xu&&xu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;$o(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){gu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:ta(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){gu(e,t)}}(t,n);break;case 5:ta(t);break;case 4:sa(e,t,n)}}function aa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&aa(t)}function ua(e){return 5===e.tag||3===e.tag||4===e.tag}function ca(e){e:{for(var t=e.return;null!==t;){if(ua(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Be(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ua(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function sa(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(la(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(la(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function fa(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ra(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ae(n,r),ln(e,o),t=ln(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?nn(n,u):"dangerouslySetInnerHTML"===a?Le(n,u):"children"===a?Be(n,u):X(n,a,u,t)}switch(e){case"input":Se(n,r);break;case"textarea":Ne(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Pe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Pe(n,!!r.multiple,r.defaultValue,!0):Pe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Rt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ia=Bo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void da(t);case 19:return void da(t);case 17:return}throw Error(l(163))}function da(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Jl),t.forEach((function(t){var r=wu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pa="function"==typeof WeakMap?WeakMap:Map;function ma(e,t,n){(n=ui(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ra||(Ra=!0,Ma=r),ea(e,t)},n}function ha(e,t,n){(n=ui(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ea(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fa?Fa=new Set([this]):Fa.add(this),ea(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var ya,ba=Math.ceil,ga=G.ReactCurrentDispatcher,va=G.ReactCurrentOwner,wa=0,Ea=3,xa=4,ka=0,Aa=null,Sa=null,Ca=0,Ta=wa,Oa=null,Pa=1073741823,_a=1073741823,ja=null,Na=0,Da=!1,Ia=0,za=null,Ra=!1,Ma=null,Fa=null,La=!1,Ba=null,Ua=90,Wa=null,$a=0,Va=null,Qa=0;function Ha(){return 0!=(48&ka)?1073741821-(Bo()/10|0):0!==Qa?Qa:Qa=1073741821-(Bo()/10|0)}function Ka(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Uo();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&ka))return Ca;if(null!==n)e=Yo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Yo(e,150,100);break;case 97:case 96:e=Yo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Aa&&e===Ca&&--e,e}function Ya(e,t){if(50<$a)throw $a=0,Va=null,Error(l(185));if(null!==(e=qa(e,t))){var n=Uo();1073741823===t?0!=(8&ka)&&0==(48&ka)?Ja(e):(Xa(e),0===ka&&Ho()):Xa(e),0==(4&ka)||98!==n&&99!==n||(null===Wa?Wa=new Map([[e,t]]):(void 0===(n=Wa.get(e))||n>t)&&Wa.set(e,t))}}function qa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Aa===o&&(lu(t),Ta===xa&&Du(o,Ca)),Iu(o,t)),o}function Ga(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Nu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Xa(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Qo(Ja.bind(null,e));else{var t=Ga(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Ha();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Do&&Ao(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Qo(Ja.bind(null,e)):Vo(r,Za.bind(null,e),{timeout:10*(1073741821-t)-Bo()}),e.callbackNode=t}}}function Za(e,t){if(Qa=0,t)return zu(e,t=Ha()),Xa(e),null;var n=Ga(e);if(0!==n){if(t=e.callbackNode,0!=(48&ka))throw Error(l(327));if(hu(),e===Aa&&n===Ca||nu(e,n),null!==Sa){var r=ka;ka|=16;for(var o=ou();;)try{uu();break}catch(t){ru(e,t)}if(ei(),ka=r,ga.current=o,1===Ta)throw t=Oa,nu(e,n),Du(e,n),Xa(e),t;if(null===Sa)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Ta,Aa=null,r){case wa:case 1:throw Error(l(345));case 2:zu(e,2<n?2:n);break;case Ea:if(Du(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),1073741823===Pa&&10<(o=Ia+500-Bo())){if(Da){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(i=Ga(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=vn(du.bind(null,e),o);break}du(e);break;case xa:if(Du(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),Da&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(o=Ga(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==_a?r=10*(1073741821-_a)-Bo():1073741823===Pa?r=0:(r=10*(1073741821-Pa)-5e3,0>(r=(o=Bo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ba(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=vn(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==Pa&&null!==ja){i=Pa;var a=ja;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Bo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Du(e,n),e.timeoutHandle=vn(du.bind(null,e),r);break}}du(e);break;default:throw Error(l(329))}if(Xa(e),e.callbackNode===t)return Za.bind(null,e)}}return null}function Ja(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&ka))throw Error(l(327));if(hu(),e===Aa&&t===Ca||nu(e,t),null!==Sa){var n=ka;ka|=16;for(var r=ou();;)try{au();break}catch(t){ru(e,t)}if(ei(),ka=n,ga.current=r,1===Ta)throw n=Oa,nu(e,t),Du(e,t),Xa(e),n;if(null!==Sa)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Aa=null,du(e),Xa(e)}return null}function eu(e,t){var n=ka;ka|=1;try{return e(t)}finally{0===(ka=n)&&Ho()}}function tu(e,t){var n=ka;ka&=-2,ka|=8;try{return e(t)}finally{0===(ka=n)&&Ho()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Sa)for(n=Sa.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&bo();break;case 3:Di(),uo(po),uo(fo);break;case 5:zi(r);break;case 4:Di();break;case 13:case 19:uo(Ri);break;case 10:ti(r)}n=n.return}Aa=e,Sa=Cu(e.current,null),Ca=t,Ta=wa,Oa=null,_a=Pa=1073741823,ja=null,Na=0,Da=!1}function ru(e,t){for(;;){try{if(ei(),Li.current=yl,Qi)for(var n=Wi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Ui=0,Vi=$i=Wi=null,Qi=!1,null===Sa||null===Sa.return)return Ta=1,Oa=t,Sa=null;e:{var o=e,i=Sa.return,l=Sa,a=t;if(t=Ca,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Ri.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var y=new Set;y.add(u),f.updateQueue=y}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var b=ui(1073741823,null);b.tag=2,ci(l,b)}l.expirationTime=1073741823;break e}a=void 0,l=t;var g=o.pingCache;if(null===g?(g=o.pingCache=new pa,a=new Set,g.set(u,a)):void 0===(a=g.get(u))&&(a=new Set,g.set(u,a)),!a.has(l)){a.add(l);var v=vu.bind(null,o,u,l);u.then(v,v)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ye(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+be(l))}5!==Ta&&(Ta=2),a=Zl(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,si(f,ma(f,u,t));break e;case 1:u=a;var w=f.type,E=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Fa||!Fa.has(E)))){f.effectTag|=4096,f.expirationTime=t,si(f,ha(f,u,t));break e}}f=f.return}while(null!==f)}Sa=su(Sa)}catch(e){t=e;continue}break}}function ou(){var e=ga.current;return ga.current=yl,null===e?yl:e}function iu(e,t){e<Pa&&2<e&&(Pa=e),null!==t&&e<_a&&2<e&&(_a=e,ja=t)}function lu(e){e>Na&&(Na=e)}function au(){for(;null!==Sa;)Sa=cu(Sa)}function uu(){for(;null!==Sa&&!Io();)Sa=cu(Sa)}function cu(e){var t=ya(e.alternate,e,Ca);return e.memoizedProps=e.pendingProps,null===t&&(t=su(e)),va.current=null,t}function su(e){Sa=e;do{var t=Sa.alternate;if(e=Sa.return,0==(2048&Sa.effectTag)){if(t=Gl(t,Sa,Ca),1===Ca||1!==Sa.childExpirationTime){for(var n=0,r=Sa.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Sa.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sa.firstEffect),null!==Sa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sa.firstEffect),e.lastEffect=Sa.lastEffect),1<Sa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sa:e.firstEffect=Sa,e.lastEffect=Sa))}else{if(null!==(t=Xl(Sa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sa.sibling))return t;Sa=e}while(null!==Sa);return Ta===wa&&(Ta=5),null}function fu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function du(e){var t=Uo();return $o(99,pu.bind(null,e,t)),null}function pu(e,t){do{hu()}while(null!==Ba);if(0!=(48&ka))throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Aa&&(Sa=Aa=null,Ca=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=ka;ka|=32,va.current=null,hn=Ht;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,b=a,g=null;t:for(;;){for(var v;b!==u||0!==s&&3!==b.nodeType||(p=d+s),b!==f||0!==c&&3!==b.nodeType||(m=d+c),3===b.nodeType&&(d+=b.nodeValue.length),null!==(v=b.firstChild);)g=b,b=v;for(;;){if(b===a)break t;if(g===u&&++h===s&&(p=d),g===f&&++y===c&&(m=d),null!==(v=b.nextSibling))break;g=(b=g).parentNode}b=v}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;yn={activeElementDetached:null,focusedElem:a,selectionRange:u},Ht=!1,za=o;do{try{mu()}catch(e){if(null===za)throw Error(l(330));gu(za,e),za=za.nextEffect}}while(null!==za);za=o;do{try{for(a=e,u=t;null!==za;){var w=za.effectTag;if(16&w&&Be(za.stateNode,""),128&w){var E=za.alternate;if(null!==E){var x=E.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:ca(za),za.effectTag&=-3;break;case 6:ca(za),za.effectTag&=-3,fa(za.alternate,za);break;case 1024:za.effectTag&=-1025;break;case 1028:za.effectTag&=-1025,fa(za.alternate,za);break;case 4:fa(za.alternate,za);break;case 8:sa(a,s=za,u),aa(s)}za=za.nextEffect}}catch(e){if(null===za)throw Error(l(330));gu(za,e),za=za.nextEffect}}while(null!==za);if(x=yn,E=pn(),w=x.focusedElem,u=x.selectionRange,E!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(E=u.start,void 0===(x=u.end)&&(x=E),"selectionStart"in w?(w.selectionStart=E,w.selectionEnd=Math.min(x,w.value.length)):(x=(E=w.ownerDocument||document)&&E.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!x.extend&&a>u&&(s=u,u=a,a=s),s=dn(w,a),f=dn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((E=E.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),a>u?(x.addRange(E),x.extend(f.node,f.offset)):(E.setEnd(f.node,f.offset),x.addRange(E))))),E=[];for(x=w;x=x.parentNode;)1===x.nodeType&&E.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<E.length;w++)(x=E[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Ht=!!hn,yn=hn=null,e.current=n,za=o;do{try{for(w=e;null!==za;){var k=za.effectTag;if(36&k&&ia(w,za.alternate,za),128&k){E=void 0;var A=za.ref;if(null!==A){var S=za.stateNode;switch(za.tag){case 5:E=S;break;default:E=S}"function"==typeof A?A(E):A.current=E}}za=za.nextEffect}}catch(e){if(null===za)throw Error(l(330));gu(za,e),za=za.nextEffect}}while(null!==za);za=null,zo(),ka=i}else e.current=n;if(La)La=!1,Ba=e,Ua=t;else for(za=o;null!==za;)t=za.nextEffect,za.nextEffect=null,za=t;if(0===(t=e.firstPendingTime)&&(Fa=null),1073741823===t?e===Va?$a++:($a=0,Va=e):$a=0,"function"==typeof Eu&&Eu(n.stateNode,r),Xa(e),Ra)throw Ra=!1,e=Ma,Ma=null,e;return 0!=(8&ka)||Ho(),null}function mu(){for(;null!==za;){var e=za.effectTag;0!=(256&e)&&na(za.alternate,za),0==(512&e)||La||(La=!0,Vo(97,(function(){return hu(),null}))),za=za.nextEffect}}function hu(){if(90!==Ua){var e=97<Ua?97:Ua;return Ua=90,$o(e,yu)}}function yu(){if(null===Ba)return!1;var e=Ba;if(Ba=null,0!=(48&ka))throw Error(l(331));var t=ka;for(ka|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ra(5,n),oa(5,n)}}catch(t){if(null===e)throw Error(l(330));gu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return ka=t,Ho(),!0}function bu(e,t,n){ci(e,t=ma(e,t=Zl(n,t),1073741823)),null!==(e=qa(e,1073741823))&&Xa(e)}function gu(e,t){if(3===e.tag)bu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){bu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fa||!Fa.has(r))){ci(n,e=ha(n,e=Zl(t,e),1073741823)),null!==(n=qa(n,1073741823))&&Xa(n);break}}n=n.return}}function vu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Aa===e&&Ca===n?Ta===xa||Ta===Ea&&1073741823===Pa&&Bo()-Ia<500?nu(e,Ca):Da=!0:Nu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Xa(e)))}function wu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Ka(t=Ha(),e,null)),null!==(e=qa(e,t))&&Xa(e)}ya=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)_l=!0;else{if(r<n){switch(_l=!1,t.tag){case 3:Ll(t),Ol();break;case 5:if(Ii(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:yo(t.type)&&wo(t);break;case 4:Ni(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,co(Go,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Vl(e,t,n):(co(Ri,1&Ri.current),null!==(t=Yl(e,t,n))?t.sibling:null);co(Ri,1&Ri.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Kl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),co(Ri,Ri.current),!r)return null}return Yl(e,t,n)}_l=!1}}else _l=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=ho(t,fo.current),ri(t,n),o=Yi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,yo(r)){var i=!0;wo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,li(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&hi(t,r,a,e),o.updater=yi,t.stateNode=o,o._reactInternalFiber=t,wi(t,r,e,n),t=Fl(null,t,r,!0,i,n)}else t.tag=0,jl(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Su(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=qo(o,e),i){case 0:t=Rl(null,t,o,e,n);break e;case 1:t=Ml(null,t,o,e,n);break e;case 11:t=Nl(null,t,o,e,n);break e;case 14:t=Dl(null,t,o,qo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Rl(e,t,r,o=t.elementType===r?o:qo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ml(e,t,r,o=t.elementType===r?o:qo(r,o),n);case 3:if(Ll(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ai(e,t),fi(t,r,null,n),(r=t.memoizedState.element)===o)Ol(),t=Yl(e,t,n);else{if((o=t.stateNode.hydrate)&&(El=En(t.stateNode.containerInfo.firstChild),wl=t,o=xl=!0),o)for(n=Ci(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else jl(e,t,r,n),Ol();t=t.child}return t;case 5:return Ii(t),null===e&&Sl(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,gn(r,o)?a=null:null!==i&&gn(r,i)&&(t.effectTag|=16),zl(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(jl(e,t,a,n),t=t.child),t;case 6:return null===e&&Sl(t),null;case 13:return Vl(e,t,n);case 4:return Ni(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Si(t,null,r,n):jl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Nl(e,t,r,o=t.elementType===r?o:qo(r,o),n);case 7:return jl(e,t,t.pendingProps,n),t.child;case 8:case 12:return jl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(co(Go,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0===(i=Mr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!po.current){t=Yl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=ui(n,null)).tag=2,ci(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ni(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}jl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,jl(e,t,r,n),t.child;case 14:return i=qo(o=t.type,t.pendingProps),Dl(e,t,o,i=qo(o.type,i),r,n);case 15:return Il(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:qo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,yo(r)?(e=!0,wo(t)):e=!1,ri(t,n),gi(t,r,o),wi(t,r,o,n),Fl(null,t,r,!0,e,n);case 19:return Kl(e,t,n)}throw Error(l(156,t.tag))};var Eu=null,xu=null;function ku(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Au(e,t,n,r){return new ku(e,t,n,r)}function Su(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Cu(e,t){var n=e.alternate;return null===n?((n=Au(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Tu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Su(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return Ou(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Au(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Au(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Au(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Au(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Ou(e,t,n,r){return(e=Au(7,e,r,t)).expirationTime=n,e}function Pu(e,t,n){return(e=Au(6,e,null,t)).expirationTime=n,e}function _u(e,t,n){return(t=Au(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function ju(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Nu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Du(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Iu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function zu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Ru(e,t,n,r){var o=t.current,i=Ha(),a=pi.suspense;i=Ka(i,o,a);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(yo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(yo(c)){n=vo(n,c,u);break e}}n=u}else n=so;return null===t.context?t.context=n:t.pendingContext=n,(t=ui(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ci(o,t),Ya(o,i),i}function Mu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Lu(e,t){Fu(e,t),(e=e.alternate)&&Fu(e,t)}function Bu(e,t,n){var r=new ju(e,t,n=null!=n&&!0===n.hydrate),o=Au(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,li(o),e[Cn]=r.current,n&&0!==t&&function(e,t){var n=Ze(t);Ct.forEach((function(e){mt(e,t,n)})),Tt.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Uu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Wu(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Mu(l);a.call(e)}}Ru(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Bu(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Mu(l);u.call(e)}}tu((function(){Ru(t,l,e,o)}))}return Mu(l)}function $u(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Vu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Uu(t))throw Error(l(200));return $u(e,t,null,n)}Bu.prototype.render=function(e){Ru(e,this._internalRoot,null,null)},Bu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ru(null,e,null,(function(){t[Cn]=null}))},ht=function(e){if(13===e.tag){var t=Yo(Ha(),150,100);Ya(e,t),Lu(e,t)}},yt=function(e){13===e.tag&&(Ya(e,3),Lu(e,3))},bt=function(e){if(13===e.tag){var t=Ha();Ya(e,t=Ka(t,e,null)),Lu(e,t)}},O=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=_n(r);if(!o)throw Error(l(90));Ee(r),Se(r,o)}}}break;case"textarea":Ne(e,n);break;case"select":null!=(t=n.value)&&Pe(e,!!n.multiple,t,!1)}},I=eu,z=function(e,t,n,r,o){var i=ka;ka|=4;try{return $o(98,e.bind(null,t,n,r,o))}finally{0===(ka=i)&&Ho()}},R=function(){0==(49&ka)&&(function(){if(null!==Wa){var e=Wa;Wa=null,e.forEach((function(e,t){zu(t,e),Xa(t)})),Ho()}}(),hu())},M=function(e,t){var n=ka;ka|=2;try{return e(t)}finally{0===(ka=n)&&Ho()}};var Qu,Hu,Ku={Events:[On,Pn,_n,C,k,Mn,function(e){ot(e,Rn)},N,D,Xt,at,hu,{current:!1}]};Hu=(Qu={findFiberByHostInstance:Tn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Eu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},xu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Qu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:G.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Hu?Hu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ku,t.createPortal=Vu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&ka))throw Error(l(187));var n=ka;ka|=1;try{return $o(99,e.bind(null,t))}finally{ka=n,Ho()}},t.hydrate=function(e,t,n){if(!Uu(t))throw Error(l(200));return Wu(null,e,t,!0,n)},t.render=function(e,t,n){if(!Uu(t))throw Error(l(200));return Wu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Uu(e))throw Error(l(40));return!!e._reactRootContainer&&(tu((function(){Wu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Cn]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Vu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Uu(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return Wu(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(21)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,l,a;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},l=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var y=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof y&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var b=p.now();t.unstable_now=function(){return p.now()-b}}var g=!1,v=null,w=-1,E=5,x=0;l=function(){return t.unstable_now()>=x},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):E=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,A=k.port2;k.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();x=e+E;try{v(!0,e)?A.postMessage(null):(g=!1,v=null)}catch(e){throw A.postMessage(null),e}}else g=!1},r=function(e){v=e,g||(g=!0,A.postMessage(null))},o=function(e,n){w=m((function(){e(t.unstable_now())}),n)},i=function(){h(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<O(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>O(l,n))void 0!==u&&0>O(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>O(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function O(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],_=[],j=1,N=null,D=3,I=!1,z=!1,R=!1;function M(e){for(var t=C(_);null!==t;){if(null===t.callback)T(_);else{if(!(t.startTime<=e))break;T(_),t.sortIndex=t.expirationTime,S(P,t)}t=C(_)}}function F(e){if(R=!1,M(e),!z)if(null!==C(P))z=!0,r(L);else{var t=C(_);null!==t&&o(F,t.startTime-e)}}function L(e,n){z=!1,R&&(R=!1,i()),I=!0;var r=D;try{for(M(n),N=C(P);null!==N&&(!(N.expirationTime>n)||e&&!l());){var a=N.callback;if(null!==a){N.callback=null,D=N.priorityLevel;var u=a(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?N.callback=u:N===C(P)&&T(P),M(n)}else T(P);N=C(P)}if(null!==N)var c=!0;else{var s=C(_);null!==s&&o(F,s.startTime-n),c=!1}return c}finally{N=null,D=r,I=!1}}function B(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var U=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){z||I||(z=!0,r(L))},t.unstable_getCurrentPriorityLevel=function(){return D},t.unstable_getFirstCallbackNode=function(){return C(P)},t.unstable_next=function(e){switch(D){case 1:case 2:case 3:var t=3;break;default:t=D}var n=D;D=t;try{return e()}finally{D=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=U,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=D;D=e;try{return t()}finally{D=n}},t.unstable_scheduleCallback=function(e,n,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:B(e)}else l=B(e),u=a;return e={id:j++,callback:n,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(_,e),null===C(P)&&e===C(_)&&(R?i():R=!0,o(F,u-a))):(e.sortIndex=l,S(P,e),z||I||(z=!0,r(L))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();M(e);var n=C(P);return n!==N&&null!==N&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<N.expirationTime||l()},t.unstable_wrapCallback=function(e){var t=D;return function(){var n=D;D=t;try{return e.apply(this,arguments)}finally{D=n}}}},function(e,t,n){e.exports=n(23)()},function(e,t,n){"use strict";var r=n(24);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";
/** @license React v16.13.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,a=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,y=r?Symbol.for("react.memo"):60115,b=r?Symbol.for("react.lazy"):60116,g=r?Symbol.for("react.block"):60121,v=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,E=r?Symbol.for("react.scope"):60119;function x(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case l:case u:case a:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case b:case y:case c:return e;default:return t}}case i:return t}}}function k(e){return x(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=l,t.Lazy=b,t.Memo=y,t.Portal=i,t.Profiler=u,t.StrictMode=a,t.Suspense=m,t.isAsyncMode=function(e){return k(e)||x(e)===f},t.isConcurrentMode=k,t.isContextConsumer=function(e){return x(e)===s},t.isContextProvider=function(e){return x(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return x(e)===p},t.isFragment=function(e){return x(e)===l},t.isLazy=function(e){return x(e)===b},t.isMemo=function(e){return x(e)===y},t.isPortal=function(e){return x(e)===i},t.isProfiler=function(e){return x(e)===u},t.isStrictMode=function(e){return x(e)===a},t.isSuspense=function(e){return x(e)===m},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===d||e===u||e===a||e===m||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===b||e.$$typeof===y||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===v||e.$$typeof===w||e.$$typeof===E||e.$$typeof===g)},t.typeOf=x},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r)()(!0);o.push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"style.styl"}]),t.default=o},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r)()(!0);o.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap);"]),o.push([e.i,'.game--20q4 {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n.playing-field--1H4P {\n  display: flex;\n  margin-top: 20px;\n}\n.victory--eDPS {\n  color: #008000;\n}\n.lose--2iiW {\n  color: #f00;\n}\n.lose--2iiW span,\n.victory--eDPS span {\n  display: block;\n  font-family: "Indie Flower";\n  font-size: 35px;\n  text-align: center;\n}\n',"",{version:3,sources:["src/Modules/Game/style.styl","style.styl"],names:[],mappings:"AAGA;EACE,aAAQ;EACR,uBAAgB;EAChB,sBAAe;EACf,mBAAY;ACDd;ADGA;EACE,aAAQ;EACR,gBAAW;ACDb;ADGA;EACE,cAAM;ACDR;ADGA;EACE,WAAM;ACDR;ADGA;;EACE,cAAQ;EACR,2BAAY;EACZ,eAAU;EACV,kBAAW;ACAb",file:"style.styl",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap');\n@import '../../Assets/variables.styl';\n\n.game\n  display flex\n  justify-content center\n  flex-direction column\n  align-items center\n\n.playing-field\n  display flex\n  margin-top 20px\n\n.victory\n  color $color-green\n\n.lose\n  color $color-red\n\n.lose span, .victory span\n  display block\n  font-family \"Indie Flower\"\n  font-size 35px\n  text-align center",'@import url("https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap");\n.game {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n.playing-field {\n  display: flex;\n  margin-top: 20px;\n}\n.victory {\n  color: #008000;\n}\n.lose {\n  color: #f00;\n}\n.lose span,\n.victory span {\n  display: block;\n  font-family: "Indie Flower";\n  font-size: 35px;\n  text-align: center;\n}\n']}]),o.locals={game:"game--20q4","playing-field":"playing-field--1H4P",victory:"victory--eDPS",lose:"lose--2iiW"},t.default=o},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r)()(!0);o.push([e.i,".calculation-field--3fk6 {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 14px;\n  height: 49px;\n  padding: 2px;\n  margin: 0 4px;\n  background: #2f2d39;\n}\n.first--1AmH,\n.second--2Aog,\n.third--1sLX,\n.fourth--2n2C {\n  margin-bottom: 2px;\n}\n.first--1AmH {\n  margin-top: 1px;\n}\n","",{version:3,sources:["src/Components/CalculationField/style.styl","style.styl"],names:[],mappings:"AAEA;EACE,aAAQ;EACR,sBAAe;EACf,mBAAY;EACZ,WAAM;EACN,YAAO;EACP,YAAQ;EACR,aAAO;EACP,mBAAW;ACDb;ADGA;;;;EACE,kBAAc;ACEhB;ADAA;EACE,eAAW;ACEb",file:"style.styl",sourcesContent:["  @import '../../Assets/variables.styl';\n\n.calculation-field\n  display flex\n  flex-direction column\n  align-items center\n  width 14px\n  height 49px\n  padding 2px\n  margin 0 4px\n  background $color-dark-grey\n\n.first, .second, .third, .fourth\n  margin-bottom 2px\n\n.first\n  margin-top 1px\n\n",".calculation-field {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 14px;\n  height: 49px;\n  padding: 2px;\n  margin: 0 4px;\n  background: #2f2d39;\n}\n.first,\n.second,\n.third,\n.fourth {\n  margin-bottom: 2px;\n}\n.first {\n  margin-top: 1px;\n}\n"]}]),o.locals={"calculation-field":"calculation-field--3fk6",first:"first--1AmH",second:"second--2Aog",third:"third--1sLX",fourth:"fourth--2n2C"},t.default=o},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r)()(!0);o.push([e.i,".hit-count--3Nci {\n  display: flex;\n  align-items: center;\n  width: 205px;\n  background: #2f2d39;\n}\n.active--3jjK {\n  cursor: pointer;\n}\n.size__small--3S_2 {\n  width: 10px;\n  height: 10px;\n  border-radius: 5px;\n  background: #fff;\n}\n.size__normal--35gJ {\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n}\n.size__big--2dP1 {\n  width: 41px;\n  height: 41px;\n  margin-right: 5px;\n  border-radius: 22px;\n}\n.size__big--2dP1:last-child {\n  margin-right: 0px;\n}\n.clicked--2U4P {\n  border: 2px solid #a52a2a;\n}\n.color-selected--14ow {\n  box-sizing: border-box;\n  border: 2px solid #a52a2a;\n}\n","",{version:3,sources:["src/Assets/outerStyle.styl","outerStyle.styl"],names:[],mappings:"AAEA;EACE,aAAQ;EACR,mBAAY;EACZ,YAAM;EACN,mBAAW;ACDb;ADGA;EACE,eAAO;ACDT;ADIE;EACE,WAAM;EACN,YAAO;EACP,kBAAc;EACd,gBAAW;ACFf;ADGE;EACE,WAAM;EACN,YAAO;EACP,mBAAc;ACDlB;ADEE;EACE,WAAM;EACN,YAAO;EACP,iBAAa;EACb,mBAAc;ACAlB;ADCI;EACE,iBAAa;ACCnB;ADCA;EACE,yBAAO;ACCT;ADCA;EACE,sBAAW;EACX,yBAAO;ACCT",file:"outerStyle.styl",sourcesContent:["@import './variables.styl';\n\n.hit-count\n  display flex\n  align-items center\n  width 205px\n  background $color-dark-grey\n\n.active\n  cursor pointer\n\n.size\n  &__small\n    width 10px\n    height 10px\n    border-radius 5px\n    background $color-white\n  &__normal\n    width 30px\n    height 30px\n    border-radius 15px\n  &__big\n    width 41px\n    height 41px\n    margin-right 5px\n    border-radius 22px\n    &:last-child\n      margin-right 0px\n\n.clicked\n  border 2px solid brown\n\n.color-selected\n  box-sizing border-box\n  border 2px solid brown\n",".hit-count {\n  display: flex;\n  align-items: center;\n  width: 205px;\n  background: #2f2d39;\n}\n.active {\n  cursor: pointer;\n}\n.size__small {\n  width: 10px;\n  height: 10px;\n  border-radius: 5px;\n  background: #fff;\n}\n.size__normal {\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n}\n.size__big {\n  width: 41px;\n  height: 41px;\n  margin-right: 5px;\n  border-radius: 22px;\n}\n.size__big:last-child {\n  margin-right: 0px;\n}\n.clicked {\n  border: 2px solid #a52a2a;\n}\n.color-selected {\n  box-sizing: border-box;\n  border: 2px solid #a52a2a;\n}\n"]}]),o.locals={"hit-count":"hit-count--3Nci",active:"active--3jjK",size__small:"size__small--3S_2",size__normal:"size__normal--35gJ",size__big:"size__big--2dP1",clicked:"clicked--2U4P","color-selected":"color-selected--14ow"},t.default=o},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r)()(!0);o.push([e.i,".side-string--1Yv7 {\n  width: 13px;\n  height: 5px;\n}\n.filled--1XsN {\n  background: #97c030;\n}\n.circle-container--W12p {\n  display: flex;\n  align-items: center;\n}\n.yellow--8zwG {\n  background: #ff0;\n}\n.white--2Q5A {\n  background: #fff;\n}\n.red--TA4i {\n  background: #f00;\n}\n.green--29EC {\n  background: #008000;\n}\n.blue--ZcAT {\n  background: #00f;\n}\n.black--2kSp {\n  background: #000;\n}\n","",{version:3,sources:["src/Components/HitCount/style.styl","style.styl"],names:[],mappings:"AAEA;EACE,WAAM;EACN,WAAO;ACDT;ADGA;EACE,mBAAW;ACDb;ADGA;EACE,aAAQ;EACR,mBAAY;ACDd;ADGA;EACE,gBAAW;ACDb;ADGA;EACE,gBAAW;ACDb;ADGA;EACE,gBAAW;ACDb;ADGA;EACE,mBAAW;ACDb;ADGA;EACE,gBAAW;ACDb;ADGA;EACE,gBAAW;ACDb",file:"style.styl",sourcesContent:["@import '../../Assets/variables.styl';\n\n.side-string\n  width 13px\n  height 5px\n\n.filled\n  background $color-light-green\n\n.circle-container\n  display flex\n  align-items center\n\n.yellow\n  background $color-yellow\n\n.white\n  background $color-white\n\n.red\n  background $color-red\n\n.green\n  background $color-green\n\n.blue\n  background $color-blue\n\n.black\n  background $color-black\n\n\n",".side-string {\n  width: 13px;\n  height: 5px;\n}\n.filled {\n  background: #97c030;\n}\n.circle-container {\n  display: flex;\n  align-items: center;\n}\n.yellow {\n  background: #ff0;\n}\n.white {\n  background: #fff;\n}\n.red {\n  background: #f00;\n}\n.green {\n  background: #008000;\n}\n.blue {\n  background: #00f;\n}\n.black {\n  background: #000;\n}\n"]}]),o.locals={"side-string":"side-string--1Yv7",filled:"filled--1XsN","circle-container":"circle-container--W12p",yellow:"yellow--8zwG",white:"white--2Q5A",red:"red--TA4i",green:"green--29EC",blue:"blue--ZcAT",black:"black--2kSp"},t.default=o},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r)()(!0);o.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap);"]),o.push([e.i,'button {\n  border: none;\n  cursor: pointer;\n  font-size: 15px;\n  font-family: "Indie Flower";\n}\nbutton:focus {\n  outline: none;\n}\n.disabled--2_UO {\n  opacity: 0.4;\n}\n.type__confirm--LPtz {\n  padding: 0 10px;\n  background-color: #e4d3d3;\n  border-radius: 0 0 10px 10px;\n  font-size: 18px;\n}\n.type__info--UvT_ {\n  background-color: transparent;\n}\n.type__close--3TE4 {\n  background-color: transparent;\n  margin-bottom: 10px;\n  color: #f00;\n}\n',"",{version:3,sources:["src/Components/Button/Button.styl","Button.styl"],names:[],mappings:"AAGA;EACE,YAAO;EACP,eAAO;EACP,eAAU;EACV,2BAAY;ACDd;ADEE;EACE,aAAQ;ACAZ;ADEA;EACE,YAAQ;ACAV;ADGE;EACE,eAAQ;EACR,yBAAiB;EACjB,4BAAc;EACd,eAAU;ACDd;ADEE;EACE,6BAAiB;ACArB;ADCE;EACE,6BAAiB;EACjB,mBAAc;EACd,WAAM;ACCV",file:"Button.styl",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap');\n@import '../../Assets/variables.styl';\n\nbutton\n  border none\n  cursor pointer\n  font-size 15px\n  font-family \"Indie Flower\"\n  &:focus\n    outline none\n\n.disabled\n  opacity 0.4\n\n.type\n  &__confirm\n    padding 0 10px\n    background-color $color-rose\n    border-radius 0 0 10px 10px\n    font-size 18px\n  &__info\n    background-color transparent\n  &__close\n    background-color transparent\n    margin-bottom 10px\n    color red\n",'@import url("https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap");\nbutton {\n  border: none;\n  cursor: pointer;\n  font-size: 15px;\n  font-family: "Indie Flower";\n}\nbutton:focus {\n  outline: none;\n}\n.disabled {\n  opacity: 0.4;\n}\n.type__confirm {\n  padding: 0 10px;\n  background-color: #e4d3d3;\n  border-radius: 0 0 10px 10px;\n  font-size: 18px;\n}\n.type__info {\n  background-color: transparent;\n}\n.type__close {\n  background-color: transparent;\n  margin-bottom: 10px;\n  color: #f00;\n}\n']}]),o.locals={disabled:"disabled--2_UO",type__confirm:"type__confirm--LPtz",type__info:"type__info--UvT_",type__close:"type__close--3TE4"},t.default=o},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r)()(!0);o.push([e.i,".color-holder--odcK {\n  display: flex;\n  padding: 10px;\n  border-radius: 5px 5px 0 0;\n  background: #e6e6e6;\n}\n.color-holder--odcK div {\n  margin: 0 4px;\n  box-sizing: border-box;\n}\n.yellow--ywSj {\n  background: #ff0;\n}\n.white--22Ra {\n  background: #fff;\n}\n.red--3mW4 {\n  background: #f00;\n}\n.green--2A29 {\n  background: #008000;\n}\n.blue--3YDy {\n  background: #00f;\n}\n.black--13wO {\n  background: #000;\n}\n","",{version:3,sources:["src/Components/ColorHolder/style.styl","style.styl"],names:[],mappings:"AAEA;EACE,aAAQ;EACR,aAAQ;EACR,0BAAc;EACd,mBAAW;ACDb;ADEE;EACE,aAAO;EACP,sBAAW;ACAf;ADEA;EACE,gBAAW;ACAb;ADEA;EACE,gBAAW;ACAb;ADEA;EACE,gBAAW;ACAb;ADEA;EACE,mBAAW;ACAb;ADEA;EACE,gBAAW;ACAb;ADEA;EACE,gBAAW;ACAb",file:"style.styl",sourcesContent:["@import '../../Assets/variables.styl';\n\n.color-holder\n  display flex\n  padding 10px\n  border-radius 5px 5px 0 0\n  background $color-grey\n  & div\n    margin 0 4px\n    box-sizing border-box\n\n.yellow\n  background $color-yellow\n\n.white\n  background $color-white\n\n.red\n  background $color-red\n\n.green\n  background $color-green\n\n.blue\n  background $color-blue\n\n.black\n  background $color-black\n\n",".color-holder {\n  display: flex;\n  padding: 10px;\n  border-radius: 5px 5px 0 0;\n  background: #e6e6e6;\n}\n.color-holder div {\n  margin: 0 4px;\n  box-sizing: border-box;\n}\n.yellow {\n  background: #ff0;\n}\n.white {\n  background: #fff;\n}\n.red {\n  background: #f00;\n}\n.green {\n  background: #008000;\n}\n.blue {\n  background: #00f;\n}\n.black {\n  background: #000;\n}\n"]}]),o.locals={"color-holder":"color-holder--odcK",yellow:"yellow--ywSj",white:"white--22Ra",red:"red--3mW4",green:"green--2A29",blue:"blue--3YDy",black:"black--13wO"},t.default=o},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r)()(!0);o.push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap);"]),o.push([e.i,'.rules--2ngI {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.rules--2ngI ul {\n  position: relative;\n  left: -10px;\n  font-family: "Indie Flower";\n  color: #2f2d39;\n  list-style-type: circle;\n}\n',"",{version:3,sources:["src/Modules/HowToPlay/style.styl","style.styl"],names:[],mappings:"AAGA;EACE,aAAQ;EACR,sBAAe;EACf,uBAAgB;EAChB,mBAAY;ACDd;ADEE;EACE,kBAAS;EACT,WAAK;EACL,2BAAY;EACZ,cAAM;EACN,uBAAgB;ACApB",file:"style.styl",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap');\n@import '../../Assets/variables.styl';\n\n.rules\n  display flex\n  flex-direction column\n  justify-content center\n  align-items center\n  & ul\n    position relative\n    left -10px\n    font-family \"Indie Flower\"\n    color $color-dark-grey\n    list-style-type circle\n",'@import url("https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap");\n.rules {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.rules ul {\n  position: relative;\n  left: -10px;\n  font-family: "Indie Flower";\n  color: #2f2d39;\n  list-style-type: circle;\n}\n']}]),o.locals={rules:"rules--2ngI"},t.default=o},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(7),l=(n(22),o.a.createContext(null));var a=function(e){e()},u={notify:function(){}};function c(){var e=a,t=null,n=null;return{clear:function(){t=null,n=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],n=t;n;)e.push(n),n=n.next;return e},subscribe:function(e){var r=!0,o=n={callback:e,next:null,prev:n};return o.prev?o.prev.next=o:t=o,function(){r&&null!==t&&(r=!1,o.next?o.next.prev=o.prev:n=o.prev,o.prev?o.prev.next=o.next:t=o.next)}}}}var s=function(){function e(e,t){this.store=e,this.parentSub=t,this.unsubscribe=null,this.listeners=u,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var t=e.prototype;return t.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},t.notifyNestedSubs=function(){this.listeners.notify()},t.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},t.isSubscribed=function(){return Boolean(this.unsubscribe)},t.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=c())},t.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=u)},e}();var f=function(e){var t=e.store,n=e.context,i=e.children,a=Object(r.useMemo)((function(){var e=new s(t);return e.onStateChange=e.notifyNestedSubs,{store:t,subscription:e}}),[t]),u=Object(r.useMemo)((function(){return t.getState()}),[t]);Object(r.useEffect)((function(){var e=a.subscription;return e.trySubscribe(),u!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[a,u]);var c=n||l;return o.a.createElement(c.Provider,{value:a},i)};n(9),n(8);var d="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect;var p=n(10),m=function(){return Math.random().toString(36).substring(7).split("").join(".")},h={INIT:"@@redux/INIT"+m(),REPLACE:"@@redux/REPLACE"+m(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+m()}};function y(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function b(e,t,n){var r;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(b)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var o=e,i=t,l=[],a=l,u=!1;function c(){a===l&&(a=l.slice())}function s(){if(u)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return i}function f(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(u)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var t=!0;return c(),a.push(e),function(){if(t){if(u)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");t=!1,c();var n=a.indexOf(e);a.splice(n,1),l=null}}}function d(e){if(!y(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(u)throw new Error("Reducers may not dispatch actions.");try{u=!0,i=o(i,e)}finally{u=!1}for(var t=l=a,n=0;n<t.length;n++){(0,t[n])()}return e}function m(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");o=e,d({type:h.REPLACE})}function g(){var e,t=f;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(s())}return n(),{unsubscribe:t(n)}}})[p.a]=function(){return this},e}return d({type:h.INIT}),(r={dispatch:d,subscribe:f,getState:s,replaceReducer:m})[p.a]=g,r}function g(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function v(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var o=t[r];0,"function"==typeof e[o]&&(n[o]=e[o])}var i,l=Object.keys(n);try{!function(e){Object.keys(e).forEach((function(t){var n=e[t];if(void 0===n(void 0,{type:h.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:h.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+h.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(n)}catch(e){i=e}return function(e,t){if(void 0===e&&(e={}),i)throw i;for(var r=!1,o={},a=0;a<l.length;a++){var u=l[a],c=n[u],s=e[u],f=c(s,t);if(void 0===f){var d=g(u,t);throw new Error(d)}o[u]=f,r=r||f!==s}return(r=r||l.length!==Object.keys(e).length)?o:e}}function w(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function E(e,t){var n=Object.keys(e);return Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(e)),t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n}function x(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?E(n,!0).forEach((function(t){w(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):E(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function k(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}function A(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),r=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},o={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},i=t.map((function(e){return e(o)}));return x({},n,{dispatch:r=k.apply(void 0,i)(n.dispatch)})}}}function S(){return Object(r.useContext)(l)}function C(e){void 0===e&&(e=l);var t=e===l?S:function(){return Object(r.useContext)(e)};return function(){return t().store}}var T=C();function O(e){void 0===e&&(e=l);var t=e===l?T:C(e);return function(){return t().dispatch}}var P=O(),_=function(e,t){return e===t};function j(e){void 0===e&&(e=l);var t=e===l?S:function(){return Object(r.useContext)(e)};return function(e,n){void 0===n&&(n=_);var o=t(),i=function(e,t,n,o){var i,l=Object(r.useReducer)((function(e){return e+1}),0)[1],a=Object(r.useMemo)((function(){return new s(n,o)}),[n,o]),u=Object(r.useRef)(),c=Object(r.useRef)(),f=Object(r.useRef)(),p=Object(r.useRef)(),m=n.getState();try{i=e!==c.current||m!==f.current||u.current?e(m):p.current}catch(e){throw u.current&&(e.message+="\nThe error may be correlated with this previous error:\n"+u.current.stack+"\n\n"),e}return d((function(){c.current=e,f.current=m,p.current=i,u.current=void 0})),d((function(){function e(){try{var e=c.current(n.getState());if(t(e,p.current))return;p.current=e}catch(e){u.current=e}l()}return a.onStateChange=e,a.trySubscribe(),e(),function(){return a.tryUnsubscribe()}}),[n,a]),i}(e,n,o.store,o.subscription);return Object(r.useDebugValue)(i),i}}var N,D=j();function I(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw Error("[Immer] minified error nr: "+e+(n.length?" "+n.join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function z(e){return!!e&&!!e[Ae]}function R(e){return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var t=Object.getPrototypeOf(e);return!t||t===Object.prototype}(e)||Array.isArray(e)||!!e[ke]||!!e.constructor[ke]||$(e)||V(e))}function M(e,t,n){void 0===n&&(n=!1),0===F(e)?(n?Object.keys:Se)(e).forEach((function(r){n&&"symbol"==typeof r||t(r,e[r],e)})):e.forEach((function(n,r){return t(r,n,e)}))}function F(e){var t=e[Ae];return t?t.i>3?t.i-4:t.i:Array.isArray(e)?1:$(e)?2:V(e)?3:0}function L(e,t){return 2===F(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function B(e,t){return 2===F(e)?e.get(t):e[t]}function U(e,t,n){var r=F(e);2===r?e.set(t,n):3===r?(e.delete(t),e.add(n)):e[t]=n}function W(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}function $(e){return ve&&e instanceof Map}function V(e){return we&&e instanceof Set}function Q(e){return e.o||e.t}function H(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var t=Ce(e);delete t[Ae];for(var n=Se(t),r=0;r<n.length;r++){var o=n[r],i=t[o];!1===i.writable&&(i.writable=!0,i.configurable=!0),(i.get||i.set)&&(t[o]={configurable:!0,writable:!0,enumerable:i.enumerable,value:e[o]})}return Object.create(Object.getPrototypeOf(e),t)}function K(e,t){q(e)||z(e)||!R(e)||(F(e)>1&&(e.set=e.add=e.clear=e.delete=Y),Object.freeze(e),t&&M(e,(function(e,t){return K(t,!0)}),!0))}function Y(){I(2)}function q(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function G(e){var t=Te[e];return t||I(19,e),t}function X(e,t){Te[e]=t}function Z(){return be}function J(e,t){t&&(G("Patches"),e.u=[],e.s=[],e.v=t)}function ee(e){te(e),e.p.forEach(re),e.p=null}function te(e){e===be&&(be=e.l)}function ne(e){return be={p:[],l:be,h:e,m:!0,_:0}}function re(e){var t=e[Ae];0===t.i||1===t.i?t.j():t.g=!0}function oe(e,t){t._=t.p.length;var n=t.p[0],r=void 0!==e&&e!==n;return t.h.O||G("ES5").S(t,e,r),r?(n[Ae].P&&(ee(t),I(4)),R(e)&&(e=ie(t,e),t.l||ae(t,e)),t.u&&G("Patches").M(n[Ae],e,t.u,t.s)):e=ie(t,n,[]),ee(t),t.u&&t.v(t.u,t.s),e!==xe?e:void 0}function ie(e,t,n){if(q(t))return t;var r=t[Ae];if(!r)return M(t,(function(o,i){return le(e,r,t,o,i,n)}),!0),t;if(r.A!==e)return t;if(!r.P)return ae(e,r.t,!0),r.t;if(!r.I){r.I=!0,r.A._--;var o=4===r.i||5===r.i?r.o=H(r.k):r.o;M(3===r.i?new Set(o):o,(function(t,i){return le(e,r,o,t,i,n)})),ae(e,o,!1),n&&e.u&&G("Patches").R(r,n,e.u,e.s)}return r.o}function le(e,t,n,r,o,i){if(z(o)){var l=ie(e,o,i&&t&&3!==t.i&&!L(t.D,r)?i.concat(r):void 0);if(U(n,r,l),!z(l))return;e.m=!1}if(R(o)&&!q(o)){if(!e.h.N&&e._<1)return;ie(e,o),t&&t.A.l||ae(e,o)}}function ae(e,t,n){void 0===n&&(n=!1),e.h.N&&e.m&&K(t,n)}function ue(e,t){var n=e[Ae];return(n?Q(n):e)[t]}function ce(e,t){if(t in e)for(var n=Object.getPrototypeOf(e);n;){var r=Object.getOwnPropertyDescriptor(n,t);if(r)return r;n=Object.getPrototypeOf(n)}}function se(e){e.P||(e.P=!0,e.l&&se(e.l))}function fe(e){e.o||(e.o=H(e.t))}function de(e,t,n){var r=$(t)?G("MapSet").T(t,n):V(t)?G("MapSet").F(t,n):e.O?function(e,t){var n=Array.isArray(e),r={i:n?1:0,A:t?t.A:Z(),P:!1,I:!1,D:{},l:t,t:e,k:null,o:null,j:null,C:!1},o=r,i=Oe;n&&(o=[r],i=Pe);var l=Proxy.revocable(o,i),a=l.revoke,u=l.proxy;return r.k=u,r.j=a,u}(t,n):G("ES5").J(t,n);return(n?n.A:Z()).p.push(r),r}function pe(e){return z(e)||I(22,e),function e(t){if(!R(t))return t;var n,r=t[Ae],o=F(t);if(r){if(!r.P&&(r.i<4||!G("ES5").K(r)))return r.t;r.I=!0,n=me(t,o),r.I=!1}else n=me(t,o);return M(n,(function(t,o){r&&B(r.t,t)===o||U(n,t,e(o))})),3===o?new Set(n):n}(e)}function me(e,t){switch(t){case 2:return new Map(e);case 3:return Array.from(e)}return H(e)}function he(){function e(e,t){var n=o[e];return n?n.enumerable=t:o[e]=n={configurable:!0,enumerable:t,get:function(){var t=this[Ae];return Oe.get(t,e)},set:function(t){var n=this[Ae];Oe.set(n,e,t)}},n}function t(e){for(var t=e.length-1;t>=0;t--){var o=e[t][Ae];if(!o.P)switch(o.i){case 5:r(o)&&se(o);break;case 4:n(o)&&se(o)}}}function n(e){for(var t=e.t,n=e.k,r=Se(n),o=r.length-1;o>=0;o--){var i=r[o];if(i!==Ae){var l=t[i];if(void 0===l&&!L(t,i))return!0;var a=n[i],u=a&&a[Ae];if(u?u.t!==l:!W(a,l))return!0}}var c=!!t[Ae];return r.length!==Se(t).length+(c?0:1)}function r(e){var t=e.k;if(t.length!==e.t.length)return!0;var n=Object.getOwnPropertyDescriptor(t,t.length-1);return!(!n||n.get)}var o={};X("ES5",{J:function(t,n){var r=Array.isArray(t),o=function(t,n){if(t){for(var r=Array(n.length),o=0;o<n.length;o++)Object.defineProperty(r,""+o,e(o,!0));return r}var i=Ce(n);delete i[Ae];for(var l=Se(i),a=0;a<l.length;a++){var u=l[a];i[u]=e(u,t||!!i[u].enumerable)}return Object.create(Object.getPrototypeOf(n),i)}(r,t),i={i:r?5:4,A:n?n.A:Z(),P:!1,I:!1,D:{},l:n,t:t,k:o,o:null,g:!1,C:!1};return Object.defineProperty(o,Ae,{value:i,writable:!0}),o},S:function(e,n,o){o?z(n)&&n[Ae].A===e&&t(e.p):(e.u&&function e(t){if(t&&"object"==typeof t){var n=t[Ae];if(n){var o=n.t,i=n.k,l=n.D,a=n.i;if(4===a)M(i,(function(t){t!==Ae&&(void 0!==o[t]||L(o,t)?l[t]||e(i[t]):(l[t]=!0,se(n)))})),M(o,(function(e){void 0!==i[e]||L(i,e)||(l[e]=!1,se(n))}));else if(5===a){if(r(n)&&(se(n),l.length=!0),i.length<o.length)for(var u=i.length;u<o.length;u++)l[u]=!1;else for(var c=o.length;c<i.length;c++)l[c]=!0;for(var s=Math.min(i.length,o.length),f=0;f<s;f++)void 0===l[f]&&e(i[f])}}}}(e.p[0]),t(e.p))},K:function(e){return 4===e.i?n(e):r(e)}})}N=i.unstable_batchedUpdates,a=N;var ye,be,ge="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),ve="undefined"!=typeof Map,we="undefined"!=typeof Set,Ee="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,xe=ge?Symbol.for("immer-nothing"):((ye={})["immer-nothing"]=!0,ye),ke=ge?Symbol.for("immer-draftable"):"__$immer_draftable",Ae=ge?Symbol.for("immer-state"):"__$immer_state",Se=("undefined"!=typeof Symbol&&Symbol.iterator,"undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames),Ce=Object.getOwnPropertyDescriptors||function(e){var t={};return Se(e).forEach((function(n){t[n]=Object.getOwnPropertyDescriptor(e,n)})),t},Te={},Oe={get:function(e,t){if(t===Ae)return e;var n=Q(e);if(!L(n,t))return function(e,t,n){var r,o=ce(t,n);return o?"value"in o?o.value:null===(r=o.get)||void 0===r?void 0:r.call(e.k):void 0}(e,n,t);var r=n[t];return e.I||!R(r)?r:r===ue(e.t,t)?(fe(e),e.o[t]=de(e.A.h,r,e)):r},has:function(e,t){return t in Q(e)},ownKeys:function(e){return Reflect.ownKeys(Q(e))},set:function(e,t,n){var r=ce(Q(e),t);if(null==r?void 0:r.set)return r.set.call(e.k,n),!0;if(e.D[t]=!0,!e.P){if(W(n,ue(Q(e),t))&&(void 0!==n||L(e.t,t)))return!0;fe(e),se(e)}return e.o[t]=n,!0},deleteProperty:function(e,t){return void 0!==ue(e.t,t)||t in e.t?(e.D[t]=!1,fe(e),se(e)):delete e.D[t],e.o&&delete e.o[t],!0},getOwnPropertyDescriptor:function(e,t){var n=Q(e),r=Reflect.getOwnPropertyDescriptor(n,t);return r?{writable:!0,configurable:1!==e.i||"length"!==t,enumerable:r.enumerable,value:n[t]}:r},defineProperty:function(){I(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){I(12)}},Pe={};M(Oe,(function(e,t){Pe[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),Pe.deleteProperty=function(e,t){return Oe.deleteProperty.call(this,e[0],t)},Pe.set=function(e,t,n){return Oe.set.call(this,e[0],t,n,e[0])};var _e=new(function(){function e(e){this.O=Ee,this.N=!1,"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze),this.produce=this.produce.bind(this),this.produceWithPatches=this.produceWithPatches.bind(this)}var t=e.prototype;return t.produce=function(e,t,n){if("function"==typeof e&&"function"!=typeof t){var r=t;t=e;var o=this;return function(e){var n=this;void 0===e&&(e=r);for(var i=arguments.length,l=Array(i>1?i-1:0),a=1;a<i;a++)l[a-1]=arguments[a];return o.produce(e,(function(e){var r;return(r=t).call.apply(r,[n,e].concat(l))}))}}var i;if("function"!=typeof t&&I(6),void 0!==n&&"function"!=typeof n&&I(7),R(e)){var l=ne(this),a=de(this,e,void 0),u=!0;try{i=t(a),u=!1}finally{u?ee(l):te(l)}return"undefined"!=typeof Promise&&i instanceof Promise?i.then((function(e){return J(l,n),oe(e,l)}),(function(e){throw ee(l),e})):(J(l,n),oe(i,l))}if(!e||"object"!=typeof e){if((i=t(e))===xe)return;return void 0===i&&(i=e),this.N&&K(i,!0),i}I(21,e)},t.produceWithPatches=function(e,t){var n,r,o=this;return"function"==typeof e?function(t){for(var n=arguments.length,r=Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];return o.produceWithPatches(t,(function(t){return e.apply(void 0,[t].concat(r))}))}:[this.produce(e,t,(function(e,t){n=e,r=t})),n,r]},t.createDraft=function(e){R(e)||I(8),z(e)&&(e=pe(e));var t=ne(this),n=de(this,e,void 0);return n[Ae].C=!0,te(t),n},t.finishDraft=function(e,t){var n=(e&&e[Ae]).A;return J(n,t),oe(void 0,n)},t.setAutoFreeze=function(e){this.N=e},t.setUseProxies=function(e){e&&!Ee&&I(20),this.O=e},t.applyPatches=function(e,t){var n;for(n=t.length-1;n>=0;n--){var r=t[n];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}var o=G("Patches").$;return z(e)?o(e,t):this.produce(e,(function(e){return o(e,t.slice(n+1))}))},e}()),je=_e.produce,Ne=(_e.produceWithPatches.bind(_e),_e.setAutoFreeze.bind(_e),_e.setUseProxies.bind(_e),_e.applyPatches.bind(_e),_e.createDraft.bind(_e),_e.finishDraft.bind(_e),je);function De(e,t){return e===t}function Ie(e,t,n){if(null===t||null===n||t.length!==n.length)return!1;for(var r=t.length,o=0;o<r;o++)if(!e(t[o],n[o]))return!1;return!0}function ze(e){var t=Array.isArray(e[0])?e[0]:e;if(!t.every((function(e){return"function"==typeof e}))){var n=t.map((function(e){return typeof e})).join(", ");throw new Error("Selector creators expect all input-selectors to be functions, instead received the following types: ["+n+"]")}return t}!function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r]}((function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:De,n=null,r=null;return function(){return Ie(t,n,arguments)||(r=e.apply(null,arguments)),n=arguments,r}}));function Re(e){return function(t){var n=t.dispatch,r=t.getState;return function(t){return function(o){return"function"==typeof o?o(n,r,e):t(o)}}}}var Me=Re();Me.withExtraArgument=Re;var Fe=Me;function Le(){return(Le=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Be(e){return(Be=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ue(e,t){return(Ue=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function We(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function $e(e,t,n){return($e=We()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&Ue(o,n.prototype),o}).apply(null,arguments)}function Ve(e){var t="function"==typeof Map?new Map:void 0;return(Ve=function(e){if(null===e||!function(e){return-1!==Function.toString.call(e).indexOf("[native code]")}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return $e(e,arguments,Be(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),Ue(n,e)})(e)}var Qe="undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(0!==arguments.length)return"object"==typeof arguments[0]?k:k.apply(null,arguments)};function He(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}var Ke=function(e){var t,n;function r(){return e.apply(this,arguments)||this}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var o=r.prototype;return o.concat=function(){for(var t,n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return $e(r,(t=e.prototype.concat).call.apply(t,[this].concat(o)))},o.prepend=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 1===t.length&&Array.isArray(t[0])?$e(r,t[0].concat(this)):$e(r,t.concat(this))},r}(Ve(Array));function Ye(){return function(e){return function(e){void 0===e&&(e={});var t=e,n=t.thunk,r=void 0===n||n,o=(t.immutableCheck,t.serializableCheck,new Ke);r&&(!function(e){return"boolean"==typeof e}(r)?o.push(Fe.withExtraArgument(r.extraArgument)):o.push(Fe));0;return o}(e)}}function qe(e,t){function n(){if(t){var n=t.apply(void 0,arguments);if(!n)throw new Error("prepareAction did not return an object");return Le({type:e,payload:n.payload},"meta"in n&&{meta:n.meta},{},"error"in n&&{error:n.error})}return{type:e,payload:arguments.length<=0?void 0:arguments[0]}}return n.toString=function(){return""+e},n.type=e,n.match=function(t){return t.type===e},n}function Ge(e){var t,n={},r=[],o={addCase:function(e,t){var r="string"==typeof e?e:e.type;if(r in n)throw new Error("addCase cannot be called with two reducers for the same action type");return n[r]=t,o},addMatcher:function(e,t){return r.push({matcher:e,reducer:t}),o},addDefaultCase:function(e){return t=e,o}};return e(o),[n,r,t]}function Xe(e){var t=e.name,n=e.initialState;if(!t)throw new Error("`name` is a required option for createSlice");var r=e.reducers||{},o=void 0===e.extraReducers?[]:"function"==typeof e.extraReducers?Ge(e.extraReducers):[e.extraReducers],i=o[0],l=void 0===i?{}:i,a=o[1],u=void 0===a?[]:a,c=o[2],s=void 0===c?void 0:c,f=Object.keys(r),d={},p={},m={};f.forEach((function(e){var n,o,i=r[e],l=t+"/"+e;"reducer"in i?(n=i.reducer,o=i.prepare):n=i,d[e]=n,p[l]=n,m[e]=o?qe(l,o):qe(l)}));var h=function(e,t,n,r){void 0===n&&(n=[]);var o="function"==typeof t?Ge(t):[t,n,r],i=o[0],l=o[1],a=o[2];return function(t,n){void 0===t&&(t=e);var r=[i[n.type]].concat(l.filter((function(e){return(0,e.matcher)(n)})).map((function(e){return e.reducer})));return 0===r.filter((function(e){return!!e})).length&&(r=[a]),r.reduce((function(e,t){if(t){if(z(e)){var r=t(e,n);return void 0===r?e:r}if(R(e))return Ne(e,(function(e){return t(e,n)}));var o=t(e,n);if(void 0===o)throw Error("A case reducer on a non-draftable value must not return undefined");return o}return e}),t)}}(n,Le({},l,{},p),u,s);return{name:t,reducer:h,actions:m,caseReducers:d}}"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));he();var Ze=Xe({name:"color",initialState:{color:"",randomColor:[],roundStatic:""},reducers:{getColor:function(e,t){e.color=t.payload},getRandomColor:function(e,t){e.randomColor=t.payload},getRoundStatics:function(e,t){e.roundStatic=t.payload}}}),Je=Ze.actions,et=Je.getColor,tt=Je.getRandomColor,nt=Je.getRoundStatics,rt=Ze.reducer,ot=Xe({name:"confirm",initialState:{show:!1},reducers:{getConfirmAction:function(e,t){e.show=t.payload}}}),it=ot.actions.getConfirmAction,lt=function(e){var t,n=Ye(),r=e||{},o=r.reducer,i=void 0===o?void 0:o,l=r.middleware,a=void 0===l?n():l,u=r.devTools,c=void 0===u||u,s=r.preloadedState,f=void 0===s?void 0:s,d=r.enhancers,p=void 0===d?void 0:d;if("function"==typeof i)t=i;else{if(!He(i))throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');t=v(i)}var m=A.apply(void 0,"function"==typeof a?a(n):a),h=k;c&&(h=Qe(Le({trace:!1},"object"==typeof c&&c)));var y=[m];return Array.isArray(p)?y=[m].concat(p):"function"==typeof p&&(y=p(y)),b(t,f,h.apply(void 0,y))}({reducer:v({color:rt,show:ot.reducer}),devTools:!1}),at=n(16),ut=n.n(at),ct=n(5),st=n.n(ct),ft=["first","second","third","fourth"],dt=["yellow","white","red","green","blue","black"],pt={extraClass:"",clicked:!1},mt={number:"",fillLine:!1,editable:!0},ht=function(e,t){var n=P();Object(r.useEffect)((function(){var r=e.sort((function(){return Math.random()-.5})).slice(0,t);n(tt(r))}),[])},yt=n(11),bt=n.n(yt),gt=n(4),vt=n.n(gt),wt=n(3),Et=n.n(wt);function xt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function kt(e){return function(e){if(Array.isArray(e))return At(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return At(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return At(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function At(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var St=function(e){var t=e.size,n=void 0===t?"big":t,r=e.clicked,i=e.active,l=e.onClick,a=e.isColorSelected,u=e.extraClass,c=void 0===u?[]:u,s=vt.a.apply(void 0,[Et.a["size__".concat(n)],xt({},Et.a.active,i),xt({},Et.a.clicked,r),xt({},Et.a["color-selected"],a)].concat(kt(c)));return o.a.createElement("div",{onClick:l,className:s})},Ct=o.a.memo(St);function Tt(e){return function(e){if(Array.isArray(e))return Ot(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return Ot(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Ot(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ot(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Pt=function(e){var t=e.number;return o.a.createElement("div",{className:bt.a["calculation-field"]},t?Tt(Array(t)).map((function(e,t){return o.a.createElement(Ct,{key:t,extraClass:[bt.a[ft[t]]],size:"small"})})):null)},_t=o.a.memo(Pt),jt=n(6),Nt=n.n(jt);function Dt(e){return function(e){if(Array.isArray(e))return Lt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Ft(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function It(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function zt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?It(Object(n),!0).forEach((function(t){Rt(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):It(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Rt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Mt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}(e,t)||Ft(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ft(e,t){if(e){if("string"==typeof e)return Lt(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Lt(e,t):void 0}}function Lt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Bt=function(e){var t=e.isEditable,n=e.filled,i=e.randomColor,l=D((function(e){return e.color.color})),a=P(),u=Mt(Object(r.useState)({}),2),c=u[0],s=u[1],f=Mt(Object(r.useState)([0,0,0,0]),2),d=f[0],p=f[1];Object(r.useEffect)((function(){var e={};ft.forEach((function(t,n){e[n]=zt({},pt)})),s(e)}),[]);var m,h=function(e,n){if(t){var r=zt({},c),o=d;o[n]=1,p(o),r[n].extraClass=l,s(r),l&&(u=!0,d.indexOf(0)>=0&&(u=!1),u&&a(it(!0))),function(){var e=[];if(Object.keys(c).forEach((function(t,n){c[n].extraClass&&e.push(c[t].extraClass)})),4===e.length){var t=[],n=[],r=new Set,o="";i.forEach((function(t,o){r.add(t),i[o]===e[o]&&n.push(t)})),Dt(r).forEach((function(n){e.indexOf(n)>=0&&t.push(n)})),4===n.length&&console.log("congrat"),o=t.length.toString(),o+=n.length.toString(),a(nt(o))}}()}var u},y=function(e){var t=vt()(Nt.a["side-string"],Rt({},Nt.a.filled,e));return o.a.createElement("div",{className:t})};return o.a.createElement("div",{className:Et.a["hit-count"]},y(n),o.a.createElement("div",{className:Nt.a["circle-container"]},(m=[],Object.keys(c).forEach((function(e,n){m.push(o.a.createElement(Ct,{key:n,isColorSelected:!!l&&!c[n].extraClass,active:t,extraClass:[Nt.a[c[n].extraClass]],onClick:function(){return h(0,n)}}))})),m)),y(n))},Ut=o.a.memo(Bt),Wt=n(12),$t=n.n(Wt);function Vt(e){return function(e){if(Array.isArray(e))return Qt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return Qt(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Qt(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Qt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Ht=function(e){var t,n,r,i=e.type,l=void 0===i?"confirm":i,a=e.text,u=e.onClick,c=e.disabled,s=e.extraClass,f=void 0===s?[]:s,d=vt.a.apply(void 0,[(t={},n=$t.a.disabled,r=c,n in t?Object.defineProperty(t,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[n]=r,t),$t.a["type__".concat(l)]].concat(Vt(f)));return o.a.createElement("button",{onClick:u,disabled:c,className:d},a)},Kt=o.a.memo(Ht),Yt=n(13),qt=n.n(Yt);function Gt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Xt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Gt(Object(n),!0).forEach((function(t){Zt(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Gt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Zt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Jt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return en(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return en(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function en(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var tn=function(){var e=P(),t=Jt(Object(r.useState)({}),2),n=t[0],i=t[1];Object(r.useEffect)((function(){var e={};dt.forEach((function(t,n){e[n]=Xt({},pt),e[n].extraClass=t})),i(e)}),[]);var l=Object(r.useCallback)((function(t,r){var o=Xt({},n);for(var l in o)o[l].clicked=!1;o[r].clicked=!0,e(et(n[r].extraClass)),i(o)}),[n]);return o.a.createElement("div",{className:qt.a["color-holder"]},Object.keys(n).map((function(e,t){return o.a.createElement(Ct,{key:t,clicked:n[t].clicked,active:!0,extraClass:[qt.a[n[t].extraClass]],size:"normal",onClick:function(){return l(e,t)}})})))},nn=o.a.memo(tn),rn=n(17),on=n.n(rn),ln=n.p+"5bcd9b4e9c377f83eec76e3add1ed1b6.jpg";function an(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return un(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return un(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function un(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var cn=function(){var e=an(Object(r.useState)(!1),2),t=e[0],n=e[1];return o.a.createElement("div",null,t?o.a.createElement("div",{className:on.a.rules},o.a.createElement(Kt,{type:"close",text:"close",onClick:function(){return n(!t)}}),o.a.createElement("ul",null,o.a.createElement("li",null,"7 attempts to calculate the colors"),o.a.createElement("li",null,"hidden colors do not repeat")),o.a.createElement("img",{src:ln,alt:"how to play"})):o.a.createElement(Kt,{type:"info",text:"help",onClick:function(){return n(!t)}}))},sn=o.a.memo(cn);function fn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function dn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function pn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return mn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return mn(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function mn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var hn=function(){ht(dt,ft.length);var e,t=pn(Object(r.useState)([mt]),2),n=t[0],i=t[1],l=pn(Object(r.useState)(!1),2),a=l[0],u=l[1],c=D((function(e){return e.color.randomColor})),s=D((function(e){return e.show.show})),f=D((function(e){return e.color.roundStatic})),d=P();return o.a.createElement("div",{className:st.a.game},o.a.createElement(nn,null),o.a.createElement(sn,null),a?o.a.createElement("div",{className:st.a.victory},o.a.createElement("span",null,"you figured out the code"),o.a.createElement("span",null,c.join("-"))):8===Object.keys(n).length?o.a.createElement("div",{className:st.a.lose},o.a.createElement("span",null,"you lose"),o.a.createElement("span",null,c.join("-"))):(e=[],Object.keys(n).forEach((function(t,r){e.push(o.a.createElement("div",{key:r,className:st.a["playing-field"]},o.a.createElement(_t,{number:parseInt(n[r].number.charAt(0))}),o.a.createElement(Ut,{randomColor:c,filled:!!n[r].number.charAt(0),isEditable:n[r].editable}),o.a.createElement(_t,{number:parseInt(n[r].number.charAt(1))})))})),e),s&&!a&&o.a.createElement(Kt,{text:"Confirm",onClick:function(){if("44"===f)u(!0);else{var e=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?fn(Object(n),!0).forEach((function(t){dn(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):fn(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},n),t=Object.keys(e).length;e[t-1].number=f,e[t-1].editable=!1,e[t]={number:"",fillLine:!1,editable:!0},d(it(!1)),i(e)}}}))},yn=o.a.memo(hn),bn=function(){return o.a.createElement("div",{className:ut.a.layout},o.a.createElement(yn,null))},gn=function(){return o.a.createElement(bn,null)};Object(i.render)(o.a.createElement(f,{store:lt},o.a.createElement(gn,null)),document.getElementById("index"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,